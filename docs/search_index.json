[
["index.html", "Landmark 3D geometric morphometrics of Dalton projectile points Preface 0.1 Acknowledgments 0.2 Funding", " Landmark 3D geometric morphometrics of Dalton projectile points Robert Z. Selden, Jr.1 2020-09-26 Preface Reproducibility—the ability to recompute results—and replicability—the chances other experimenters will achieve a consistent result—are two foundational characteristics of successful scientific research (Leek and Peng 2015). This volume is written in Markdown, and all files needed to reproduce it are included in the GitHub repository. The reproducible nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. Reproducibility projects in psychology and cancer biology are impacting current research practices across all domains. Examples of reproducible research are becoming more abundant in archaeology (Marwick 2016; Ivanovaitė et al. 2020; Selden Jr., Dockall, and Dubied 2020), and the next generation of archaeologists are learning those tools and methods needed to reproduce and/or replicate research results (Marwick et al. 2019). Reproducible and replicable research work flows are often employed at the highest levels of humanities-based inquiries to mitigate concern or doubt regarding proper execution, and is of particular import should the results have—explicitly or implicitly—a major impact on scientific progress (Peels and Bouter 2018). Components of the undertaking presented in this volume are novel, and this basic research endeavour is rooted in archaeological epistemology. Sharing data is not enough, and if investigators share only data absent their analysis code, that places a substantive burden on those who may seek to build upon or replicate their work in the future. In this instance, the choice to pursue a replicable work flow occurs based on the simple fact that this work is foundational, and meant to begin a meaningful discussion related to projectile morphology. As an exploratory research endeavour, this study was not preregistered. 0.1 Acknowledgments I extend my gratitude to Christian S. Hoggard and David K. Thulman for their thoughtful comments and constructive criticisms on the draft of the landmarking protocol developed for the study of Gahagan bifaces (Selden Jr., Dockall, and Dubied 2020), which is extended here for an analysis of Dalton point morphology. Additional thanks to Christian S. Hoggard for fielding questions related to the EFA analysis. This iteration of the landmarking protocol was initially developed using the digit3DLand package in R, and I am grateful to Morgane Dubied for her help with coding questions. 0.2 Funding Components of this analytical work flow were developed and funded by a Preservation Technology and Training grant (P14AP00138) to the author from the National Center for Preservation Technology and Training (NCPTT), as well as grants from the National Forests and Grasslands in Texas (15-PA-11081300-033) and the United States Forest Service (20-PA-11081300-074). References "],
["elliptical-fourier-analysis.html", "Chapter 1 Elliptical Fourier Analysis 1.1 Load packages + data 1.2 Generate outlines 1.3 Pile and mosaics 1.4 Calibrate harmonic + EFA 1.5 PCA 1.6 MANOVA + MANOVA_PW 1.7 Mean shapes", " Chapter 1 Elliptical Fourier Analysis Prior to running the landmark 3D geometric morphometric (3DGM) analysis, an elliptical Fourier analysis (EFA) was conducted to identify differences in the plan view of Dalton projectile points. These data have utility in developing the subsequent 3D landmarking protocol (LM3d3) used for the 3DGM analysis. The 2D images used in the EFA were exported as screen captures from Geomagic Design X, and are oriented using the same (exact) alignment as the 3D dataset. Each image was masked in Photoshop to render the binary (black/white) image used for this preliminary analysis. 1.1 Load packages + data # load packages library(here) ## here() starts at D:/github/dalton/supp library(Momocs) ## ## Momocs is now retired and will no longer be maintained. ## It is superseded by Momocs2 and more generally MomX ecosystem: ## ## &lt; https://momx.github.io &gt; ## ## Attaching package: &#39;Momocs&#39; ## The following object is masked from &#39;package:stats&#39;: ## ## filter # read images + attribute data jpg.list &lt;- list.files(here(&quot;/jpeg&quot;), full.names = TRUE) att.data &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, as.is = TRUE) # attributes to factors att.data$heart.out &lt;- as.factor(att.data$heart.out) att.data$heart.out &lt;- as.factor(att.data$heart.out) att.data$heart.reg &lt;- as.factor(att.data$heart.reg) att.data$bev &lt;- as.factor(att.data$bev) att.data$bev.type &lt;- as.factor(att.data$bev.type) 1.2 Generate outlines # generate outlines outlines &lt;- jpg.list %&gt;% import_jpg() ## Extracting 45.jpg outlines... ## [ 1 / 45 ] 11AI225.jpg ## [ 2 / 45 ] 11HE445.jpg ## [ 3 / 45 ] HK49_1462.jpg ## [ 4 / 45 ] HK49_2.jpg ## [ 5 / 45 ] HK49_3022.jpg ## [ 6 / 45 ] HK49_3823.jpg ## [ 7 / 45 ] HK49_4.jpg ## [ 8 / 45 ] HK49_5928.jpg ## [ 9 / 45 ] HK49_5961.jpg ## [ 10 / 45 ] HK49_7.jpg ## [ 11 / 45 ] Keil-Mangold3.jpg ## [ 12 / 45 ] KeilMangold10.jpg ## [ 13 / 45 ] KeilMangold13.jpg ## [ 14 / 45 ] KeilMangold14.jpg ## [ 15 / 45 ] KeilMangold17.jpg ## [ 16 / 45 ] KeilMangold24.jpg ## [ 17 / 45 ] KeilMangold42.jpg ## [ 18 / 45 ] KeilMangold64.jpg ## [ 19 / 45 ] KeilMangold8.jpg ## [ 20 / 45 ] KeilMangold90.jpg ## [ 21 / 45 ] Kinzer46.jpg ## [ 22 / 45 ] Kinzer49.jpg ## [ 23 / 45 ] Kinzer50.jpg ## [ 24 / 45 ] Leprechaun11MS1983FSI800-5.jpg ## [ 25 / 45 ] MA1699p1.jpg ## [ 26 / 45 ] MA1699p3.jpg ## [ 27 / 45 ] McL4_158.jpg ## [ 28 / 45 ] McL4_614.jpg ## [ 29 / 45 ] McL7_101.jpg ## [ 30 / 45 ] McL7_168.jpg ## [ 31 / 45 ] Nochta11MS128BFSI267-1.jpg ## [ 32 / 45 ] Nochta11MS128bFSIPP1001.jpg ## [ 33 / 45 ] Nochta11MS128BFSIPP2495.jpg ## [ 34 / 45 ] Nochta11MS128BFSIPP3305.jpg ## [ 35 / 45 ] Nochta11MS12BFIS800-168.jpg ## [ 36 / 45 ] OH1_176.jpg ## [ 37 / 45 ] ReedVoss2.jpg ## [ 38 / 45 ] TR10_19.jpg ## [ 39 / 45 ] TR10_4.jpg ## [ 40 / 45 ] Welton1.jpg ## [ 41 / 45 ] Welton2.jpg ## [ 42 / 45 ] Welton3.jpg ## [ 43 / 45 ] Welton4.jpg ## [ 44 / 45 ] Welton5.jpg ## [ 45 / 45 ] Welton6.jpg ## Done in 6.1 secs # add attributes data.out &lt;- Out(outlines, fac = att.data) # center, scale, align, and rotate specimens norm.outlines &lt;- data.out %&gt;% coo_scale() %&gt;% coo_rotate() %&gt;% coo_align() %&gt;% coo_center() 1.3 Pile and mosaics # outline pile pile(norm.outlines) # mosaics # in/out of heartland mosaic(norm.outlines, ~heart.out, asp = 1, palette = pal_qual_Dark2) # heartland regions (heartland, interior, and northern periphery) mosaic(norm.outlines, ~heart.reg, asp = 1, palette = pal_qual_Dark2) # beveled or not mosaic(norm.outlines, ~bev, asp = 1, palette = pal_qual_Dark2) # bevel type mosaic(norm.outlines, ~bev.type, asp = 1, palette = pal_qual_Dark2) 1.4 Calibrate harmonic + EFA # calibrate how many harmonics needed calibrate_harmonicpower_efourier(norm.outlines, nb.h = 20) ## $gg ## ## $q ## h1 h2 h3 h4 h5 ## 11AI225 65.85908 71.56834 91.06827 93.38305 97.93433 ## 11HE445 31.71380 68.00042 87.76597 90.37718 96.81345 ## HK49_1462 54.77031 83.17790 94.41895 95.35329 98.43893 ## HK49_2 71.50329 83.31028 94.41132 95.49433 97.87996 ## HK49_3022 48.39494 79.30088 90.31980 91.90675 95.50910 ## HK49_3823 41.02266 81.71531 90.90259 92.09555 96.59107 ## HK49_4 51.06059 76.17592 89.59546 90.70925 95.32511 ## HK49_5928 52.37516 93.35387 94.97209 95.02615 98.28995 ## HK49_5961 62.96163 83.49033 93.61738 94.31914 97.28153 ## HK49_7 63.54297 76.16877 91.15774 93.68197 98.02700 ## Keil-Mangold3 36.92348 77.42257 88.46542 89.06440 95.29969 ## KeilMangold10 30.66085 81.18734 90.68406 91.78727 96.26064 ## KeilMangold13 37.11521 74.05227 85.03287 86.39464 93.96513 ## KeilMangold14 29.04780 84.09499 89.58838 91.71462 95.52528 ## KeilMangold17 42.47902 74.47388 87.70073 88.72376 95.49248 ## KeilMangold24 34.60233 65.07349 85.49001 88.26197 95.70266 ## KeilMangold42 32.04287 61.81458 83.29544 87.14419 95.01931 ## KeilMangold64 42.93900 78.52855 87.93326 89.21172 95.08793 ## KeilMangold8 34.83942 74.13054 88.24788 91.03793 95.68828 ## KeilMangold90 42.81487 90.79557 95.39600 95.98156 98.37536 ## Kinzer46 70.33790 79.02209 95.51880 97.01168 98.66173 ## Kinzer49 59.31487 84.47910 95.25888 95.77987 97.99347 ## Kinzer50 65.44184 84.99214 94.95731 95.33941 98.10893 ## Leprechaun11MS1983FSI800-5 41.50553 74.62689 84.36269 85.94567 90.78311 ## MA1699p1 45.90440 72.96551 86.20258 88.58088 95.29469 ## MA1699p3 40.00252 53.13164 78.18449 81.89398 93.54727 ## McL4_158 62.10878 83.85781 92.41304 92.51768 96.82901 ## McL4_614 42.73570 81.65149 91.05945 93.72356 97.08052 ## McL7_101 52.69355 82.35807 93.29284 93.35288 97.29253 ## McL7_168 57.53115 79.39151 93.24306 94.56819 98.28313 ## Nochta11MS128BFSI267-1 62.71156 83.26033 91.42871 92.25802 97.91593 ## Nochta11MS128bFSIPP1001 59.32746 81.74062 91.75299 92.60223 97.31183 ## Nochta11MS128BFSIPP2495 63.65100 69.73261 93.03348 95.00499 98.45445 ## Nochta11MS128BFSIPP3305 50.62463 56.18438 88.60695 88.86063 97.18311 ## Nochta11MS12BFIS800-168 42.97063 63.97628 84.15762 87.29134 95.31437 ## OH1_176 65.24696 81.99938 93.93475 94.61611 97.50530 ## ReedVoss2 45.55421 71.69262 87.23360 88.63422 96.09138 ## TR10_19 53.56373 81.55262 91.63256 92.65051 97.52262 ## TR10_4 61.92913 73.31379 94.02994 95.84468 98.68984 ## Welton1 11.39291 77.05020 85.52808 91.48072 95.32411 ## Welton2 67.61736 86.49242 94.60502 94.95758 97.79397 ## Welton3 33.95774 81.90709 89.18768 91.15808 95.58114 ## Welton4 33.90037 84.13558 91.37781 92.67638 96.78332 ## Welton5 19.96734 79.21885 86.69763 91.04814 94.68065 ## Welton6 43.90564 66.07756 75.97847 77.94012 83.05639 ## h6 h7 h8 h9 h10 ## 11AI225 98.12907 98.54328 99.01252 99.07841 99.48099 ## 11HE445 97.47767 98.86839 99.14479 99.18980 99.47455 ## HK49_1462 98.65503 99.30013 99.43902 99.47831 99.72894 ## HK49_2 98.57595 98.98002 99.25857 99.52727 99.65659 ## HK49_3022 96.02254 98.26328 98.88060 99.07661 99.47851 ## HK49_3823 96.90104 98.73089 99.07067 99.55885 99.64301 ## HK49_4 96.59638 98.24941 98.69573 98.77843 99.49395 ## HK49_5928 98.73472 99.10547 99.23040 99.65007 99.70397 ## HK49_5961 97.63356 98.66096 98.86936 99.04765 99.48465 ## HK49_7 98.25801 99.02253 99.11723 99.34876 99.75291 ## Keil-Mangold3 96.22379 98.11702 98.28659 99.26402 99.42210 ## KeilMangold10 96.53226 97.99246 98.08294 98.77661 98.85932 ## KeilMangold13 95.30306 98.31182 98.48662 99.32247 99.42195 ## KeilMangold14 96.22420 98.00602 98.18528 99.06264 99.21574 ## KeilMangold17 96.71112 98.63372 98.67051 99.09769 99.20569 ## KeilMangold24 96.02241 98.89177 98.94385 99.14781 99.33411 ## KeilMangold42 95.80262 98.49166 98.84542 99.28779 99.38843 ## KeilMangold64 95.53587 98.25528 98.52489 99.44268 99.50013 ## KeilMangold8 96.28801 98.13136 98.41405 99.00932 99.20757 ## KeilMangold90 98.46630 99.44468 99.46978 99.74061 99.77866 ## Kinzer46 98.94227 98.96786 99.56643 99.64917 99.73433 ## Kinzer49 98.38394 98.77454 99.15880 99.23428 99.54470 ## Kinzer50 98.46743 99.18040 99.37676 99.45718 99.69452 ## Leprechaun11MS1983FSI800-5 92.21101 95.59745 96.42852 98.14350 98.42368 ## MA1699p1 95.89919 98.25385 98.60495 99.16375 99.31342 ## MA1699p3 95.27500 98.41191 98.67541 99.06007 99.09438 ## McL4_158 98.34804 98.76789 99.38597 99.70625 99.75988 ## McL4_614 97.13061 99.00538 99.23101 99.74212 99.76258 ## McL7_101 98.25765 98.85622 99.12916 99.20004 99.79267 ## McL7_168 98.62874 99.09836 99.27519 99.29297 99.66385 ## Nochta11MS128BFSI267-1 98.46809 99.32012 99.35164 99.64799 99.66857 ## Nochta11MS128bFSIPP1001 97.81025 99.31377 99.37977 99.63628 99.65221 ## Nochta11MS128BFSIPP2495 98.70157 98.80832 99.25433 99.46432 99.79058 ## Nochta11MS128BFSIPP3305 97.75743 98.06819 98.71883 98.92568 99.20282 ## Nochta11MS12BFIS800-168 96.20255 98.45093 98.88566 99.23521 99.30013 ## OH1_176 97.82201 98.55653 98.73204 99.11266 99.56660 ## ReedVoss2 96.78253 98.57354 98.81740 99.20475 99.32453 ## TR10_19 97.81025 98.64173 99.01780 99.41266 99.55578 ## TR10_4 98.81733 98.86542 99.50520 99.62770 99.79192 ## Welton1 95.89848 97.94971 98.17442 99.26838 99.38531 ## Welton2 97.91220 98.95367 99.21988 99.46104 99.58883 ## Welton3 96.05185 98.17714 98.30586 99.33863 99.37360 ## Welton4 97.41759 99.03729 99.14366 99.63979 99.65976 ## Welton5 95.43068 97.09599 97.22612 98.27772 98.53168 ## Welton6 86.56435 91.55629 93.35972 96.62547 97.91635 ## h11 h12 h13 h14 h15 ## 11AI225 99.66937 99.70586 99.82427 99.89312 99.95302 ## 11HE445 99.53302 99.74857 99.83155 99.86798 99.89064 ## HK49_1462 99.79513 99.83847 99.87109 99.89442 99.97203 ## HK49_2 99.76875 99.80320 99.90730 99.94805 99.96495 ## HK49_3022 99.64948 99.76534 99.79263 99.82049 99.90345 ## HK49_3823 99.69597 99.84387 99.86088 99.90336 99.92922 ## HK49_4 99.64466 99.68573 99.80215 99.81407 99.90398 ## HK49_5928 99.75929 99.84727 99.91241 99.95240 99.95691 ## HK49_5961 99.58917 99.60336 99.80849 99.83078 99.89954 ## HK49_7 99.79376 99.82360 99.91892 99.92621 99.95930 ## Keil-Mangold3 99.71696 99.74171 99.75922 99.82321 99.82927 ## KeilMangold10 98.96524 99.12731 99.19793 99.46388 99.52495 ## KeilMangold13 99.61789 99.64186 99.66412 99.76829 99.82653 ## KeilMangold14 99.65721 99.67596 99.74699 99.78250 99.83223 ## KeilMangold17 99.24801 99.42842 99.46495 99.67572 99.74458 ## KeilMangold24 99.40224 99.65931 99.69292 99.86606 99.88402 ## KeilMangold42 99.48417 99.69937 99.72194 99.81800 99.86667 ## KeilMangold64 99.59336 99.65104 99.71429 99.78764 99.79087 ## KeilMangold8 99.29442 99.55104 99.64563 99.76900 99.84382 ## KeilMangold90 99.83614 99.88995 99.89368 99.94372 99.94811 ## Kinzer46 99.77083 99.85076 99.88830 99.89389 99.90206 ## Kinzer49 99.69122 99.73786 99.80523 99.88052 99.90782 ## Kinzer50 99.72778 99.79117 99.81172 99.84466 99.90969 ## Leprechaun11MS1983FSI800-5 99.06685 99.22942 99.32720 99.51543 99.73748 ## MA1699p1 99.41556 99.62129 99.63596 99.78698 99.82468 ## MA1699p3 99.20327 99.57105 99.68760 99.87323 99.91246 ## McL4_158 99.80274 99.81765 99.89756 99.92963 99.93903 ## McL4_614 99.79112 99.87684 99.88065 99.94882 99.96520 ## McL7_101 99.84997 99.87324 99.90388 99.93391 99.95662 ## McL7_168 99.70527 99.80831 99.81955 99.86535 99.91101 ## Nochta11MS128BFSI267-1 99.77270 99.91925 99.92952 99.94604 99.96169 ## Nochta11MS128bFSIPP1001 99.71365 99.80958 99.81904 99.92444 99.92723 ## Nochta11MS128BFSIPP2495 99.80215 99.82518 99.87203 99.92725 99.94984 ## Nochta11MS128BFSIPP3305 99.33792 99.43269 99.72389 99.78362 99.82656 ## Nochta11MS12BFIS800-168 99.44446 99.77059 99.80238 99.84979 99.87640 ## OH1_176 99.59523 99.64582 99.88035 99.89886 99.93296 ## ReedVoss2 99.36367 99.64388 99.68978 99.82180 99.88040 ## TR10_19 99.62968 99.84509 99.89405 99.91079 99.95326 ## TR10_4 99.81087 99.84234 99.93504 99.95738 99.95792 ## Welton1 99.67584 99.71951 99.79230 99.83360 99.84454 ## Welton2 99.73900 99.88810 99.90517 99.91051 99.95462 ## Welton3 99.69441 99.72403 99.83641 99.87142 99.87348 ## Welton4 99.77721 99.81815 99.84584 99.88097 99.89230 ## Welton5 99.31495 99.48053 99.54706 99.59449 99.73144 ## Welton6 98.94790 99.09255 99.18568 99.53253 99.74076 ## h16 h17 h18 h19 ## 11AI225 99.96944 99.97974 99.99516 100 ## 11HE445 99.89775 99.96522 99.98554 100 ## HK49_1462 99.98009 99.98320 99.98734 100 ## HK49_2 99.96890 99.97659 99.99185 100 ## HK49_3022 99.92775 99.96264 99.98669 100 ## HK49_3823 99.96034 99.96530 99.98627 100 ## HK49_4 99.91441 99.94387 99.99133 100 ## HK49_5928 99.96006 99.98453 99.99320 100 ## HK49_5961 99.97206 99.98319 99.98373 100 ## HK49_7 99.96108 99.97613 99.98710 100 ## Keil-Mangold3 99.91472 99.92845 99.97312 100 ## KeilMangold10 99.75746 99.83477 99.97147 100 ## KeilMangold13 99.92424 99.96399 99.97819 100 ## KeilMangold14 99.86548 99.90819 99.97552 100 ## KeilMangold17 99.80871 99.86693 99.95911 100 ## KeilMangold24 99.93451 99.95024 99.95449 100 ## KeilMangold42 99.92328 99.92978 99.94446 100 ## KeilMangold64 99.89719 99.92356 99.99261 100 ## KeilMangold8 99.92820 99.94019 99.97497 100 ## KeilMangold90 99.96954 99.97937 99.98885 100 ## Kinzer46 99.93342 99.94745 99.97476 100 ## Kinzer49 99.93033 99.93584 99.97141 100 ## Kinzer50 99.92801 99.93738 99.95529 100 ## Leprechaun11MS1983FSI800-5 99.95214 99.95659 99.98051 100 ## MA1699p1 99.94327 99.95594 99.96975 100 ## MA1699p3 99.91565 99.96029 99.98990 100 ## McL4_158 99.96124 99.97140 99.99140 100 ## McL4_614 99.97398 99.98263 99.98382 100 ## McL7_101 99.96062 99.97999 99.98540 100 ## McL7_168 99.93514 99.97393 99.98006 100 ## Nochta11MS128BFSI267-1 99.98049 99.99166 99.99499 100 ## Nochta11MS128bFSIPP1001 99.95598 99.95930 99.97340 100 ## Nochta11MS128BFSIPP2495 99.95918 99.97001 99.98974 100 ## Nochta11MS128BFSIPP3305 99.88350 99.91832 99.94746 100 ## Nochta11MS12BFIS800-168 99.89814 99.95164 99.95520 100 ## OH1_176 99.96416 99.98159 99.99453 100 ## ReedVoss2 99.94291 99.95531 99.96936 100 ## TR10_19 99.95793 99.97675 99.98567 100 ## TR10_4 99.98032 99.98618 99.99449 100 ## Welton1 99.92178 99.93489 99.98638 100 ## Welton2 99.95620 99.97122 99.97592 100 ## Welton3 99.94359 99.94528 99.99199 100 ## Welton4 99.95613 99.96836 99.98335 100 ## Welton5 99.92359 99.98223 99.99879 100 ## Welton6 99.84686 99.91989 99.96848 100 ## ## $minh ## 90% 95% 99% 99.9% ## 4 6 10 16 # 10 harmonics capture 99 percent of variation calibrate_reconstructions_efourier(norm.outlines, range = 1:10) # generate efa outlines with 10 harmonics efa.outlines &lt;- efourier(norm.outlines, nb.h = 10, norm = TRUE) # use efa.outlines for pca pca.outlines &lt;- PCA(efa.outlines) 1.5 PCA # pca scree_plot(pca.outlines) # plot pca # heartland in/out plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~heart.out, zoom = 1.25, palette = pal_qual_Dark2) # heartland region plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~heart.reg, zoom = 1.25, palette = pal_qual_Dark2) # beveled or not plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~bev, zoom = 1.25, palette = pal_qual_Dark2) # bevel type plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~bev.type, zoom = 1.25, palette = pal_qual_Dark2) # contribution of each pc boxplot(pca.outlines, ~heart.out, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~heart.reg, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~bev, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~bev.type, nax = 1:5, palette = pal_qual_Dark2) # mean shape + 2sd for the first 10 pcs PCcontrib(pca.outlines, nax = 1:5) 1.6 MANOVA + MANOVA_PW # manova + manova_pw # do shapes differ in/out of heartland? MANOVA(pca.outlines, &#39;heart.out&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 1 2.2646 6.7938 11 33 8.212e-06 *** ## Residuals 43 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # do shapes differ between heartland regions? MANOVA(pca.outlines, &#39;heart.reg&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 2 3.2261 4.5458 22 62 1.299e-06 *** ## Residuals 42 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # which? MANOVA_PW(pca.outlines, &#39;heart.reg&#39;) ## &#39;P&#39; has 10 rows, and &#39;retain&#39; is set accordingly ## PC axes 1 to 10 were retained ## HI ## HP ## IP ## $stars.tab ## H I P ## H *** * ## I - ## ## $summary (see also $manovas) ## Df Pillai approx F num Df den Df Pr(&gt;F) ## H - I 1 0.8218 11.068 10 24 9.105e-07 ## H - P 1 0.6242 3.155 10 19 1.500e-02 ## I - P 1 0.5994 2.095 10 14 1.000e-01 # do shapes differ if beveled? MANOVA(pca.outlines, &#39;bev&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 1 1.4062 4.2186 11 33 0.0006277 *** ## Residuals 43 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # do shapes differ by bevel type? MANOVA(pca.outlines, &#39;bev.type&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 2 2.8863 4.0671 22 62 6.901e-06 *** ## Residuals 42 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # which? MANOVA_PW(pca.outlines, &#39;bev.type&#39;) ## &#39;unifacial.bimarginal&#39; has 3 rows, and &#39;retain&#39; is set accordingly ## PC axes 1 to 3 were retained ## alternateno.bevel ## alternateunifacial.bimarginal ## no.bevelunifacial.bimarginal ## $stars.tab ## alternate no.bevel unifacial.bimarginal ## alternate ** - ## no.bevel - ## ## $summary (see also $manovas) ## Df Pillai approx F num Df den Df Pr(&gt;F) ## alternate - no.bevel 1 0.31187 5.74067 3 38 0.002428 ## alternate - unifacial.bimarginal 1 0.15609 1.41807 3 23 0.263027 ## no.bevel - unifacial.bimarginal 1 0.01723 0.09937 3 17 0.959277 1.7 Mean shapes # mean shapes ms.1 &lt;- MSHAPES(efa.outlines, ~heart.out) plot_MSHAPES(ms.1, size = 0.75) Figure 1.1: Mean shapes for in (H) and out (N) of the heartland. # mean shapes ms.2 &lt;- MSHAPES(efa.outlines, ~heart.reg) plot_MSHAPES(ms.2, size = 0.75) Figure 1.2: Mean shapes for heartland (H), interior (I), and northern periphery (P). # mean shapes ms.3 &lt;- MSHAPES(efa.outlines, ~bev) plot_MSHAPES(ms.3, size = 0.75) Figure 1.3: Mean shapes for beveled (y), and not beveled (n). # mean shapes ms.4 &lt;- MSHAPES(efa.outlines, ~bev.type) plot_MSHAPES(ms.4, size = 0.75) Figure 1.4: Mean shapes for alternate, unifacial.bimarginal, and no.bevel. "],
["landmarking-protocol-3d3.html", "Chapter 2 Landmarking Protocol 3d3 2.1 Generating the peripheral (plan view) spline 2.2 Splitting the spline 2.3 Spline split at location of LM 01 2.4 Spline split at locations of LM 02 and LM 03 2.5 Spline split at locations of LM 04 and LM 05 2.6 Spline split at location of LM 06 2.7 Peripheral (plan view) spline 2.8 Reference vectors and ref.pt.0 2.9 Reference planes and points 2.10 Sectioning the mesh 2.11 Splitting the sections 2.12 LM3d3: Configuration 1 2.13 References", " Chapter 2 Landmarking Protocol 3d3 Landmarking protocol 3d3 (LM3d3) represents a substantive advancement from LM3d1 (Selden Jr., Dockall, and Dubied 2020) and was modified from the LM3d2 protocol developed for the analysis of Gahagan bifaces. The principal difference between LM3d2 and LM3d3 is that the projectiles analysed using LM3d2 are lanceolate bifaces, and that landmarking protocol was not designed to capture the variation in basal morphology exhibited by stemmed (Dalton) projectile points. Like LM3d1 and LM3d2, LM3d3 uses the topology of the 3D mesh that articulates with the prehistoric design of each projectile point to construct a suite of reference geometry used to apply semilandmarks in a replicable manner. The result is a landmarking protocol that provides for the improved characterisation of whole-object morphology, which can be subset to analyse variability associated with specific plan, profile, and cross-section components. It also provides those data points needed to investigate questions of directional asymmetry, differences in front/back morphology, morphological integration between blade and basal morphology, and the morphology of broken, fractured, or otherwise incomplete specimens that permeate the archaeological record. knitr::include_graphics(&#39;images/landmarks.png&#39;) (#fig:lm3d3.landmark)Figure 1. Coordinates of landmarks populated using the LM3d1 protocol serve as the basis for LM3d3. Like its’ predecessors, LM3d3 was initially designed using the digit3DLand package in R. When the draft protocol was completed, design of the landmarking protocol shifted to Geomagic Design X (Build Version 2020.0.2 [Build Number: 55]), where the workflow was modified to include those elements of reference geometry that articulate with the prehistoric design attributes of each projectile point. The goal of this effort was to increase both the precision and rigour of the study by including the Z-dimension to capture those shape characteristics associated with axial twisting, introduced by knappers through the practice of beveling (LM3d1) (Selden Jr., Dockall, and Dubied 2020). The addition of cross-sections was needed to better characterise whole-object morphology, providing for the possibility of subsampling the semilandmarks to explore the contribution of specific cross-sections or profiles (LM3d2). LM3d3 includes an additional cross section at the blade/base transition, allowing for tests of morphological integration. While true that some landmarking protocols can be—–and often are—–recycled as new specimens are added, this particular research programme endeavours to achieve ever-greater accuracy and precision in each analytical iteration. 2.1 Generating the peripheral (plan view) spline This effort begins with a spline extracted from the surface geometry of the mesh using the extract contour curves command. In reverse-engineering, extract contour curves is regularly employed as the first step in building a patch network used to create a surface. The extracted feature curve is rendered as a spline, and follows the highest curvature contours around the periphery of the lateral and basal edges, following the highly variable sinuous edge morphology around the entirety of the projectile. The remainder of the landmarking protocol is based upon this spline, which was subsequently split at six mathematically-defined locations. knitr::include_graphics(&#39;images/extractspline.png&#39;) (#fig:lm3d3.figspline)Figure 2. Spline extracted along the highest contours of the Dalton point. 2.2 Splitting the spline Reference geometries are used in the assistance of creating other features. These include basic geometric entities, such as planes, vectors, coordinates, points, and polygons. A reference point is a virtual point and is used to mark a specific position on a model or in 3D space. A reference plane is a virtual plane that has a normal direction and an infinite size. A reference plane is not a surface body, and is used to create other features. The characteristic points and tangents developed for this landmarking protocol were inspired by the work of Birkhoff (1933), which has been gainfully employed within the context of both ceramic (Selden Jr. 2018a, 2018b, 2019, 2021) and lithic analyses (Selden Jr., Dockall, and Shafer 2018; Selden Jr., Dockall, and Dubied 2020). The first landmark (LM1) is placed at the horizontal tangent on the tip of each Dalton point. The second through fifth splits (LMs 02 - 05) occur at points of highest curvature, where LM 02 is always placed on the right side of the projectile following the application of the reference vectors. To place the final landmark (LM 06), a linear measurement was used to project a reference point equidistant between LM 02 and LM 03. The location of that point was leveraged in placing the reference plane used to cut the spline at the location of LM 06. 2.3 Spline split at location of LM 01 The horizontal tangent is calculated by drawing a horizontal line above the tip of the biface using the tangent as a common constraint, and the horizontal as the independent constraint. To split the 3D spline at the location of the horizontal tangent, a reference point was inserted at the location of the tangent in the sketch (light blue point; below, left), followed by a reference plane (in white; below, left and right) using the pick point and normal axis function where the reference point (h-tangent) was used as the pick point, and the Right plane as the normal axis (below, left). The spline was then cut at the location where the reference plane intersected with the spline (below image, right). knitr::include_graphics(&#39;images/lm1.png&#39;) (#fig:lm3d3.figlm1)Figure 3. Identify horizontal tangent, insert reference point and reference plane (left). Use reference plane to cut spline at the location of the horizontal tangent (right). 2.4 Spline split at locations of LM 02 and LM 03 The point of highest curvature on either side of the basal edge was calculated using the curvature function in the Accuracy Analyser. This function displays the curvature flow as a continuous colour plot across the area of the curve. In this instance, curvature is defined as the amount by which a geometric shape deviates from being flat or straight in the case of a line. Curvature is displayed in different colours according to the local radius, and calculated in only one direction (U or V) along the curve. Using this tool, the two points of highest curvature were located between the basal and lateral edges on either side of each projectile where the local radius measure was largest. The orientation of each biface was dictated by the auto3dgm output in LM3d1 and LM3d2; however, LM3d3 enlists a novel method to determine which side of the projectile is associated with LM 02 and LM03 using reference vectors. knitr::include_graphics(&#39;images/splinesplit1.png&#39;) (#fig:lm3d3.figcurve)Figure 4. Identify points of hightest curvature (light blue) at left/right intersection of lateral and basal edges. 2.5 Spline split at locations of LM 04 and LM 05 The point of highest curvature at the intersection of the blade and base was also calculated using the curvature function in the Accuracy Analyser. Using this tool, the two points of highest curvature were located between the blade and base on either side of each projectile where the local radius measure was largest. The orientation of each projectile was dictated by reference vectors, and the landmarking protocol follows the mesh orientation in that figure, where LM 04 was always placed on the right side of the basal edge, and LM 05 on the left. knitr::include_graphics(&#39;images/splinesplit2.png&#39;) (#fig:lm3d3.figcurve2)Figure 5. Identify points of hightest curvature (light blue) at left/right intersection of blade and base. 2.6 Spline split at location of LM 06 One additional landmark (LM 06) was placed at the centre of the base. The location of this landmark was identified by calculating the linear distance between LM 02 and LM 03, and projecting a reference point (ctrl-div; below) equidistant between the two. A reference plane was added using the ctrl-div as the pick point, and the Right plane as the normal axis. The spline was then split at the intersection of the reference plane and the basal spline. knitr::include_graphics(&#39;images/lm6.png&#39;) (#fig:lm3d3.figlm4)Figure 6. Calculate linear distance between LM 02 and LM 03, insert reference plane coplanar to Right plane equidistant between LM 02 and LM 03, and use the reference plane to cut the spline. 2.7 Peripheral (plan view) spline Through the preceding protocol, the initial spline was split into six discrete splines. These splines articulate with components of projectile morphology that can be compartmentalised in the analyses. The primary analytical gain achieved through this exercise is the requisite foundation needed to carry out replicable analyses of Dalton point morphology in three dimensions, further increasing the precision of the geometric morphometric analysis. knitr::include_graphics(&#39;images/splinesplit-frbl.png&#39;) (#fig:lm3d3.figsplinesplit-frbl)Figure 7. Result of spline splits include six discrete splines, each articulating with a region of analytical interest. The coordinates of each spline split are known, and used to place the landmarks. 2.8 Reference vectors and ref.pt.0 The fundamental components of reference geometry used to create LM3d3 consist of three reference vectors, and a single reference point (ref.pt.0), placed equidistant between LM 04 and LM 05. The three reference vectors were placed between LM 01 and ref.pt.0 (Vector 1), ref.pt.0 and LM 06 (Vector 2), and LMs 04 and 05 (Vector 3). These three reference vectors serve as the foundation for the suite of reference geometry used to place the semilandmarks. knitr::include_graphics(&#39;images/lm3d3.vectors.png&#39;) (#fig:lm3d3.vectors)Figure 8. Reference vectors placed between LMs 01 and ref.pt.0 (left), ref.pt.0 and LM 06 (center), and between LMs 04 and 05 (right). The measure of the angle between Vector 1 (blade) and Vector 2 (base) may have additional utility in lithic studies as an orthogonal metric associated with knapper skill, where greater skill is represented by an arbitrary range of angles nearest—and lesser, furthest away from—180 degrees. A second similar measure could be collected between Vectors 1 and 2 in comparison with Vector 3. Collection of these metrics from a 3D mesh in computer aided design (CAD) software adds an increased element of precision in comparison with a goniometer, and serves as an example of the added analytical value that can be extracted from this novel landmarking protocol. Prior to the addition of the reference vectors, the location of LMs 02 through 05 are considered arbitrary. Previous iterations of this landmarking protocol have relied upon auto3dgm to provide principal alignments that dictate which LMs are placed on the left/right side of the biface or projectile. In this protocol, the side of the projectile with the lowest orthogonal measure between Vector 1 and Vector 2 will be on the left, meaning that from the investigator’s view, the projectiles will curve, bend, or lean slightly—or in some cases more dramatically—to the left from base to tip. 2.9 Reference planes and points Five reference planes provide the framework needed to populate the semilandmarks. Admittedly, the logic associated with placement may seem curious at this point; however, the utility of these reference planes will become clear in subsequent sections. 2.9.1 Placement of ref.pl.1 The first reference plane (ref.pl.1) was placed between LM 01 and ref.pt.0, bisecting the blade of the projectile along the mid-line. The method of placement enlists a reference point (ref.pt.1), inserted at the intersection of the three reference vectors. It has the same x,y position as ref.pt.0, but the coordinates of ref.pt.1 were altered to relocate it 15 mm from the vector in the direction of the Z-axis. The pick point and coplanar function was used to place ref.pl.1 coplanar to the first reference vector, and in the direction of ref.pt.1. knitr::include_graphics(&#39;images/lm3d3.ref.pl.1.png&#39;) (#fig:lm3d3.ref.pl.1)Figure 9. Placement of ref.pl.1, and temporary location of ref.pt.1 15mm from Vector 1, and equidistant between LM 01 and ref.pt.0 on the blade of the projectile. 2.9.2 Placement of ref.pl.2 The second reference plane (ref.pl.2) was placed between ref.pt.0 and LM 06, bisecting the base of the projectile along the mid-line. The method of placement for ref.pl.2 follows the same protocol described in the application of ref.pl.1, and enlists the same reference point (ref.pt.1). knitr::include_graphics(&#39;images/lm3d3.ref.pl.2.png&#39;) (#fig:lm3d3.ref.pl.2)Figure 10. Placement of ref.pl.2, and temporary location of ref.pt.2 15 mm from Vector 2, and equidistant between ref.pt.0 and LM 06 on the base of the projectile. 2.9.3 Placement of ref.pl.3 The third reference plane (ref.pl.3) was placed between LMs 04 and 05, and bisects the projectile at the blade/base intersection. The method of placement for ref.pl.3 follows the same protocol described in the application of ref.pl.1, and enlists the same reference point (ref.pt.1), which was deleted following the placement of ref.pl.3. knitr::include_graphics(&#39;images/lm3d3.ref.pl.3.png&#39;) (#fig:lm3d3.ref.pl.3)Figure 11. Placement of ref.pl.3, and temporary location of ref.pt.3 15 mm from Vector 3, and equidistant between LMs 04 and 05 at the intersection of the blade and base. 2.9.4 Placement of ref.pl.4 and ref.pl.5 The fourth (ref.pl.4) and fifth (ref.pl.5) reference planes were placed using the pick point and normal function at the intersections of the first reference vector and LMs 01 and 06. knitr::include_graphics(&#39;images/lm3d3.ref.pl.4-5.png&#39;) (#fig:lm3d3.ref.pl.4-5)Figure 12. Placement of ref.pl.4 (top) and ref.pl.5 (bottom). 2.10 Sectioning the mesh The reference geometry described above was enlisted in the following three-step method developed to produce one cross-section at the blade/base intersection, four cross-sections between the blade/base intersection and LM 01, and one cross-section between the blade/base intersection and LM 06. 2.10.1 Sectioning the blade/base intersection To section the blade/base intersection, a single section was inserted using ref.pl.2, resulting in a single cross-section that bisects the projectile between LMs 04 and 05. knitr::include_graphics(&#39;images/lm3d3.section1.png&#39;) (#fig:lm3d3.section1)Figure 13. Placement of the first section, bisecting the mesh along ref.pl.2. 2.10.2 Sectioning the blade and base Six equidistant sections were placed between LM 01 and ref.pt.0, and the two sections at the locations of LM 01 and ref.pt.0 were deleted. Three equidistant sections were placed between LM 06 and ref.pt.0. The sections intersecting with ref.pt.0 and LM 06 were deleted. Subsequent to placing the sections, ref.pt.0 was itself deleted. knitr::include_graphics(&#39;images/lm3d3.all.sections.png&#39;) (#fig:lm3d3.section3)Figure 14. Placement of the two equidistant sections between LM 06 and ref.pt.3. 2.11 Splitting the sections The curvature function was employed to split each curves at the locations of highest curvature along the lateral edge. This function was detailed above, and in the application of LMs 02, 03, 04, and 05 in LM3d1. A reference plane (ref.pl.1) was then used to cut each of the four curves along the mid-line of the blade where it intersects with the curves. A second reference plane (ref.pl.2) was used to cut the single basal curve and the curve between LMs 04 and 05. Since ref.pt.0 was used to generate ref.pl.1 and ref.pl.2, either of the reference planes could be used to cut the curve between LMs 04 and 05. knitr::include_graphics(&#39;images/lm3d3.split.sections.png&#39;) (#fig:lm3d3.split)Figure 15. Each section was split at the points of highest curvature along the lateral edges, then along the mid-line at the intersection of the curve and ref.pl.1 (for the blade), and ref.pl.2 (for the base). 2.12 LM3d3: Configuration 1 LM3d3: Configuration 1 (LM3d3.c1) was used to assess the three hypotheses included in this pilot study. Semilandmarks 07 - 18 were applied around the lateral edges, and sLMs 12 and 13 between LMs 02, 06, and 03 using the curve constructed in LM3d1. Semilandmarks 19 - 30 articulate with the mid-line between LMs 01 and 06, and sLMs 31 - 34 were placed along the curve that articulates with ref.pl.3 equidistant between the lateral edge and midline. . The result is a landmark configuration that can be subset in numerous ways (plan, profile, cross-section, front/back, left/right, blade/base, etc.), using a suite of design-based attributes to achieve maximum utility for analysts of lithic morphology. knitr::include_graphics(&#39;images/lm3d3.semi.png&#39;) (#fig:lm3d3.semi)Figure 16. Landmarks (blue), semilandmarks (white), curves (orange), and splits (blue) used for LM3d3. Based upon knowledge garnered from running LaSEC (Watanabe 2018) on LM3d1, this landmarking protocol would likely be oversampled if it included additional landmarks on the cross-sections; however, it can be adapted to include as many or as few landmarks and semilandmarks needed to address the research question. knitr::include_graphics(&#39;images/lm3d3.slm.png&#39;) (#fig:lm3d3.slm)Figure 17. Landmarks (blue), semilandmarks (white), and reference geometry used in LM3d3. 2.13 References References "],
["landmark-sampling-evaluation-curve-lasec.html", "Chapter 3 Landmark Sampling Evaluation Curve (LaSEC) 3.1 Analysis of experimental sample", " Chapter 3 Landmark Sampling Evaluation Curve (LaSEC) The landmarking configuration used to analyse Dalton points was further scrutinised using the Landmark Sampling Error Curve, or LaSEC included in the LaMBDA package, as a means of assessing the fidelity of morphological characterisation by landmarks (Watanabe 2018), and was run after landmarking the first 20 samples LaSEC conducts the following procedure (Watanabe 2018, 4–5): As is typical for extracting shape data, perform a generalized Procrustes alignment (gpagen function in the geomorph package) on a coordinate dataset (argument coord.data) in 2-D or 3-D (argument n.dim) and record the resulting shape coordinates and centroid size. Here, the shape coordinates are projected onto tangent space because pairwise distances among corresponding datasets later in the analysis are based on Euclidean distances and most shape analyses in the biological literature are conducted in tangent space instead of Procrustes shape space. Subsample the same three randomly selected landmarks from all specimens. The subsampling begins with a subset of three landmarks because a minimum of three landmarks is required to define shape. Then, generate shape and centroid size data with generalized Procrustes superimposition on the subsampled data. Perform an Ordinary Procrustes Alignment (protest function in the vegan R package) on the subsampled data to minimize the pairwise distances between corresponding landmarks in the parent data through translation, rotation, and scaling of data in full shape space. As stated above, note that this procedure is different from the typical implementation of Procrustes alignment on coordinate data in 2-D or 3-D space. The function then records the sum of these squared distances as measure of fit (PSS) between the relative locations of data points in the parent and subsampled datasets. Equivalent procedure is conducted on centroid size data. Sample one additional, randomly chosen landmark and repeat step 3 until the entire set of landmarks in the parent dataset is sampled. The completion of this step represents one iteration of subsampling. Repeat steps 2–5 for specified number of iterations (iter argument). Create sampling curves by plotting the trajectory of “fit” (1–PSS) against the number of landmarks sampled from each iteration for both shape and centroid size as gray lines. Then, plot the median fit value for each number of landmarks sampled on the same plot as a thick, dark line. Finally, output these sampling curves: LaSEC_SamplingCurve_Shape.pdf, LaSEC_SamplingCurve_Size.pdf. 3.1 Analysis of experimental sample # load package #devtools::install_github(&quot;akiopteryx/lambda&quot;) library(LaMBDA) ## Loading required package: geomorph ## Loading required package: RRPP ## Loading required package: rgl ## ## Attaching package: &#39;geomorph&#39; ## The following object is masked from &#39;package:Momocs&#39;: ## ## mosquito ## Loading required package: MASS ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:Momocs&#39;: ## ## select ## Loading required package: vegan ## Loading required package: permute ## Loading required package: lattice ## This is vegan 2.5-6 # set working directory setwd(getwd()) source(&#39;readmulti.csv.R&#39;) # read .csv files setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) lmdata &lt;- readmulti.csv(filelist) lmdata &lt;- two.d.array(lmdata) setwd(&quot;../&quot;) # analysis lasec(coord.data = lmdata, n.dim = 3, iter = 1000) ## | | | 0% | | | 1% | | | 2% | | &gt; | 2% | | &gt; | 3% | | &gt; | 4% | | &gt; &gt; | 5% | | &gt; &gt; | 6% | | &gt; &gt; | 7% | | &gt; &gt; | 8% | | &gt; &gt; &gt; | 8% | | &gt; &gt; &gt; | 9% | | &gt; &gt; &gt; | 10% | | &gt; &gt; &gt; | 11% | | &gt; &gt; &gt; &gt; | 11% | | &gt; &gt; &gt; &gt; | 12% | | &gt; &gt; &gt; &gt; | 13% | | &gt; &gt; &gt; &gt; | 14% | | &gt; &gt; &gt; &gt; &gt; | 14% | | &gt; &gt; &gt; &gt; &gt; | 15% | | &gt; &gt; &gt; &gt; &gt; | 16% | | &gt; &gt; &gt; &gt; &gt; | 17% | | &gt; &gt; &gt; &gt; &gt; &gt; | 17% | | &gt; &gt; &gt; &gt; &gt; &gt; | 18% | | &gt; &gt; &gt; &gt; &gt; &gt; | 19% | | &gt; &gt; &gt; &gt; &gt; &gt; | 20% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 20% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 21% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 22% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 23% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 23% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 24% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 25% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 26% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 26% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 27% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 28% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 29% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 29% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 30% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 31% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 32% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 32% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 33% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 34% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 35% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 35% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 36% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 37% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 38% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 38% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 39% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 40% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 41% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 41% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 42% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 43% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 44% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 44% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 45% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 46% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 47% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 47% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 48% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 49% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 50% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 50% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 51% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 52% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 53% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 53% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 54% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 55% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 56% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 56% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 57% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 58% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 59% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 59% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 60% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 61% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 62% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 62% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 63% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 64% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 65% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 65% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 66% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 67% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 68% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 68% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 69% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 70% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 71% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 71% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 72% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 73% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 74% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 74% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 75% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 76% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 77% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 77% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 78% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 79% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 80% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 80% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 81% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 82% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 83% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 83% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 84% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 85% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 86% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 86% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 87% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 88% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 89% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 89% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 90% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 91% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 92% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 92% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 93% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 94% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 95% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 96% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 97% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; | 98% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;| 98% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;| 99% | | &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;| 100% ## $fit ## [,1] [,2] [,3] [,4] [,5] [,6] [,7] ## [1,] NA NA 0.64994349 0.6429060 0.7653432 0.8209942 0.8464145 ## [2,] NA NA 0.56881591 0.7538901 0.8454429 0.8713971 0.9101558 ## [3,] NA NA 0.55073401 0.7406511 0.7954441 0.8164828 0.8321403 ## [4,] NA NA 0.69227874 0.7682198 0.8626111 0.8907930 0.9345128 ## [5,] NA NA 0.61481988 0.6831856 0.7919543 0.8562088 0.8554120 ## [6,] NA NA 0.37919966 0.5761514 0.8189649 0.8771360 0.9005688 ## [7,] NA NA 0.57088072 0.7219452 0.7313529 0.8482791 0.8548784 ## [8,] NA NA 0.44085149 0.5525591 0.8175535 0.9094987 0.9273129 ## [9,] NA NA 0.74813822 0.8164228 0.8834011 0.9136893 0.9370728 ## [10,] NA NA 0.67234350 0.7420470 0.7406978 0.8440078 0.8686883 ## [11,] NA NA 0.53691331 0.7567642 0.8970873 0.9178226 0.9320752 ## [12,] NA NA 0.35595906 0.8048533 0.8124867 0.8259321 0.8429585 ## [13,] NA NA 0.44326422 0.5026934 0.7389854 0.8505908 0.8549082 ## [14,] NA NA 0.52198517 0.6901819 0.7746380 0.8234723 0.8457573 ## [15,] NA NA 0.68698142 0.7318981 0.7678017 0.7862675 0.8666849 ## [16,] NA NA 0.51439246 0.7960415 0.8353522 0.8611626 0.8779176 ## [17,] NA NA 0.35629033 0.5293189 0.7791390 0.8914692 0.9084878 ## [18,] NA NA 0.45034995 0.6814529 0.7951320 0.8799714 0.8868430 ## [19,] NA NA 0.04525796 0.6769287 0.7940482 0.8801494 0.8977247 ## [20,] NA NA 0.46333524 0.6469152 0.6920588 0.7317867 0.7887306 ## [21,] NA NA 0.56956129 0.6251505 0.7920836 0.8219189 0.8502473 ## [22,] NA NA 0.70082723 0.7948212 0.8721785 0.8938699 0.9008447 ## [23,] NA NA 0.64245350 0.7836307 0.8463123 0.8616728 0.8747846 ## [24,] NA NA 0.42424378 0.6762838 0.7262329 0.8177883 0.8279447 ## [25,] NA NA 0.53137428 0.7009710 0.7479376 0.8478906 0.8596271 ## [26,] NA NA 0.64210508 0.6011800 0.5960965 0.6615337 0.8780766 ## [27,] NA NA 0.69187311 0.7712044 0.8337401 0.8606732 0.8854346 ## [28,] NA NA 0.54023212 0.7860488 0.8336259 0.8571200 0.9129908 ## [29,] NA NA 0.72547456 0.7825885 0.8236096 0.8481833 0.8569387 ## [,8] [,9] [,10] [,11] [,12] [,13] ## [1,] 0.8596601 0.8667324 0.9130683 0.9189849 0.9309276 0.9342033 ## [2,] 0.9207020 0.9303246 0.9516706 0.9422093 0.9360035 0.9479349 ## [3,] 0.8422492 0.8773079 0.8892675 0.8767817 0.9086355 0.9090322 ## [4,] 0.9290429 0.9334382 0.9410055 0.9446374 0.9476139 0.9483331 ## [5,] 0.8972776 0.9023401 0.9307032 0.9333598 0.9405069 0.9519078 ## [6,] 0.9280543 0.9530731 0.9604054 0.9698693 0.9720228 0.9789486 ## [7,] 0.8607969 0.8646373 0.8714117 0.8762443 0.9426650 0.9397242 ## [8,] 0.9340395 0.9375163 0.9485191 0.9465753 0.9611197 0.9686791 ## [9,] 0.9418705 0.9631136 0.9653886 0.9681623 0.9763348 0.9771316 ## [10,] 0.8997029 0.9219716 0.9457851 0.9525103 0.9582445 0.9596588 ## [11,] 0.9457775 0.9428002 0.9482819 0.9450480 0.9546325 0.9581290 ## [12,] 0.8556172 0.8588397 0.8671557 0.8788733 0.9221223 0.9253939 ## [13,] 0.9175765 0.9280888 0.9314702 0.9337209 0.9460542 0.9534013 ## [14,] 0.8871055 0.8938925 0.9032921 0.9093911 0.9274430 0.9342871 ## [15,] 0.8718104 0.9111299 0.9150636 0.9170044 0.9217169 0.9395094 ## [16,] 0.9534308 0.9638370 0.9698113 0.9716563 0.9768144 0.9762755 ## [17,] 0.9257105 0.9469067 0.9509151 0.9530910 0.9570060 0.9774986 ## [18,] 0.8986627 0.9135289 0.9230626 0.9277674 0.9295739 0.9361318 ## [19,] 0.9217040 0.9276812 0.9304033 0.9639274 0.9612881 0.9627719 ## [20,] 0.8271384 0.8761475 0.9527753 0.9560774 0.9574004 0.9605226 ## [21,] 0.8691964 0.9352837 0.9406127 0.9432137 0.9483159 0.9389626 ## [22,] 0.9257995 0.9283393 0.9337312 0.9345843 0.9324135 0.9381725 ## [23,] 0.9007852 0.9187365 0.9493399 0.9586273 0.9596653 0.9653769 ## [24,] 0.8326933 0.9129875 0.9302594 0.9377588 0.9417471 0.9486444 ## [25,] 0.9244510 0.9287863 0.9318475 0.9370117 0.9377926 0.9395440 ## [26,] 0.9045153 0.9619352 0.9651741 0.9665617 0.9716455 0.9790295 ## [27,] 0.9044705 0.9156238 0.9226358 0.9250458 0.9411199 0.9691456 ## [28,] 0.9331610 0.9397568 0.9398098 0.9434885 0.9508419 0.9546299 ## [29,] 0.8714268 0.8591725 0.8599899 0.8906892 0.8932108 0.9401718 ## [,14] [,15] [,16] [,17] [,18] [,19] ## [1,] 0.9260337 0.9280329 0.9304245 0.9555725 0.9602777 0.9615205 ## [2,] 0.9482594 0.9608504 0.9723776 0.9741575 0.9744630 0.9868655 ## [3,] 0.9516243 0.9530831 0.9530927 0.9750082 0.9777615 0.9840069 ## [4,] 0.9678092 0.9836023 0.9849577 0.9865908 0.9867487 0.9877124 ## [5,] 0.9526990 0.9687472 0.9744378 0.9812219 0.9828865 0.9852823 ## [6,] 0.9840329 0.9886075 0.9895016 0.9910138 0.9902508 0.9916035 ## [7,] 0.9632911 0.9720473 0.9723939 0.9721446 0.9797552 0.9795013 ## [8,] 0.9722551 0.9756071 0.9850626 0.9859661 0.9866548 0.9869730 ## [9,] 0.9833955 0.9843550 0.9848448 0.9852894 0.9847173 0.9848331 ## [10,] 0.9688831 0.9808899 0.9829932 0.9838538 0.9849232 0.9910469 ## [11,] 0.9572555 0.9576913 0.9714286 0.9718649 0.9714941 0.9851596 ## [12,] 0.9285677 0.9294686 0.9333404 0.9349471 0.9358708 0.9572855 ## [13,] 0.9567681 0.9749072 0.9744760 0.9739139 0.9833523 0.9843158 ## [14,] 0.9704537 0.9703745 0.9765880 0.9724247 0.9766743 0.9744375 ## [15,] 0.9610541 0.9616095 0.9579843 0.9856509 0.9866333 0.9881648 ## [16,] 0.9774804 0.9806936 0.9812011 0.9854937 0.9862239 0.9861856 ## [17,] 0.9783617 0.9785348 0.9794290 0.9797654 0.9802077 0.9821338 ## [18,] 0.9366155 0.9404695 0.9590931 0.9661359 0.9871413 0.9889907 ## [19,] 0.9723855 0.9800372 0.9851685 0.9870851 0.9880689 0.9886023 ## [20,] 0.9635767 0.9622160 0.9626681 0.9631831 0.9773232 0.9777327 ## [21,] 0.9408096 0.9427907 0.9433612 0.9537706 0.9773884 0.9813098 ## [22,] 0.9447661 0.9472533 0.9484200 0.9517047 0.9433194 0.9490871 ## [23,] 0.9667142 0.9725807 0.9730510 0.9735656 0.9731081 0.9712636 ## [24,] 0.9511638 0.9489971 0.9486548 0.9498655 0.9572420 0.9585984 ## [25,] 0.9394163 0.9479450 0.9478131 0.9484754 0.9560894 0.9719879 ## [26,] 0.9835328 0.9819570 0.9849400 0.9859755 0.9875587 0.9882519 ## [27,] 0.9800369 0.9799161 0.9798658 0.9802891 0.9803052 0.9789242 ## [28,] 0.9594524 0.9633127 0.9641068 0.9656636 0.9670140 0.9796786 ## [29,] 0.9449410 0.9667578 0.9692184 0.9776848 0.9782589 0.9812641 ## [,20] [,21] [,22] [,23] [,24] [,25] ## [1,] 0.9878788 0.9882097 0.9889190 0.9863653 0.9918425 0.9918213 ## [2,] 0.9892459 0.9910118 0.9928361 0.9929573 0.9956644 0.9957896 ## [3,] 0.9847132 0.9883761 0.9897649 0.9906083 0.9910549 0.9913984 ## [4,] 0.9872152 0.9860561 0.9867730 0.9923973 0.9924807 0.9933253 ## [5,] 0.9902362 0.9902791 0.9907421 0.9912497 0.9918613 0.9920183 ## [6,] 0.9917906 0.9913793 0.9914264 0.9922653 0.9925213 0.9959258 ## [7,] 0.9831998 0.9823411 0.9871058 0.9893945 0.9935745 0.9930198 ## [8,] 0.9872113 0.9873132 0.9924805 0.9926801 0.9928916 0.9948805 ## [9,] 0.9856442 0.9866385 0.9920727 0.9947124 0.9946023 0.9949273 ## [10,] 0.9906974 0.9916182 0.9935678 0.9945176 0.9943936 0.9950112 ## [11,] 0.9925906 0.9929970 0.9942272 0.9945564 0.9953263 0.9954997 ## [12,] 0.9592327 0.9585319 0.9700827 0.9707617 0.9723909 0.9726367 ## [13,] 0.9911277 0.9916003 0.9937248 0.9938685 0.9936504 0.9949699 ## [14,] 0.9747309 0.9918050 0.9919344 0.9921662 0.9936166 0.9939075 ## [15,] 0.9914902 0.9922584 0.9931212 0.9935678 0.9948530 0.9957682 ## [16,] 0.9857535 0.9853471 0.9857756 0.9862407 0.9869559 0.9857723 ## [17,] 0.9823493 0.9878320 0.9883429 0.9891241 0.9892092 0.9930253 ## [18,] 0.9901480 0.9901240 0.9877255 0.9887318 0.9930978 0.9933464 ## [19,] 0.9888196 0.9910756 0.9912764 0.9922347 0.9936765 0.9945188 ## [20,] 0.9861425 0.9921079 0.9943398 0.9947160 0.9960295 0.9966820 ## [21,] 0.9853839 0.9837988 0.9875766 0.9877439 0.9917105 0.9926089 ## [22,] 0.9514146 0.9485909 0.9540902 0.9648624 0.9659518 0.9661962 ## [23,] 0.9710799 0.9717812 0.9848785 0.9914899 0.9935674 0.9944330 ## [24,] 0.9585459 0.9544222 0.9541129 0.9629934 0.9717336 0.9713437 ## [25,] 0.9727774 0.9746215 0.9758650 0.9761886 0.9883097 0.9886078 ## [26,] 0.9908321 0.9908749 0.9914044 0.9928595 0.9949394 0.9962211 ## [27,] 0.9788532 0.9768318 0.9776815 0.9776096 0.9782265 0.9781659 ## [28,] 0.9807538 0.9844281 0.9847453 0.9876298 0.9905654 0.9952885 ## [29,] 0.9846495 0.9852504 0.9928002 0.9936291 0.9938854 0.9941912 ## [,26] [,27] [,28] [,29] [,30] [,31] ## [1,] 0.9922969 0.9935094 0.9959759 0.9978811 0.9984354 0.9987468 ## [2,] 0.9962088 0.9975214 0.9978865 0.9981718 0.9989657 0.9996124 ## [3,] 0.9915002 0.9913094 0.9954823 0.9976880 0.9982736 0.9986520 ## [4,] 0.9933363 0.9958526 0.9961299 0.9962742 0.9988173 0.9989628 ## [5,] 0.9917871 0.9942066 0.9970375 0.9981704 0.9982019 0.9985097 ## [6,] 0.9960919 0.9975303 0.9976709 0.9980319 0.9982818 0.9994246 ## [7,] 0.9940126 0.9940046 0.9968295 0.9968699 0.9972756 0.9974088 ## [8,] 0.9949672 0.9956004 0.9972714 0.9977720 0.9986183 0.9987633 ## [9,] 0.9949609 0.9954855 0.9956276 0.9958149 0.9959893 0.9960481 ## [10,] 0.9955753 0.9958272 0.9966796 0.9978583 0.9987700 0.9988505 ## [11,] 0.9968910 0.9979791 0.9981899 0.9989969 0.9990605 0.9996995 ## [12,] 0.9715255 0.9733462 0.9886937 0.9883329 0.9882954 0.9917973 ## [13,] 0.9958385 0.9965877 0.9968866 0.9985520 0.9986407 0.9985466 ## [14,] 0.9946794 0.9942062 0.9977014 0.9982327 0.9982996 0.9985688 ## [15,] 0.9958144 0.9971927 0.9975238 0.9973574 0.9974965 0.9982700 ## [16,] 0.9922447 0.9926253 0.9951651 0.9954661 0.9955547 0.9958477 ## [17,] 0.9930927 0.9953238 0.9958402 0.9958463 0.9970429 0.9977419 ## [18,] 0.9936276 0.9932982 0.9940031 0.9960943 0.9961318 0.9967595 ## [19,] 0.9951808 0.9951991 0.9969191 0.9975850 0.9977738 0.9986861 ## [20,] 0.9966507 0.9975632 0.9980087 0.9982557 0.9983912 0.9989503 ## [21,] 0.9926528 0.9951807 0.9945514 0.9946406 0.9955271 0.9982582 ## [22,] 0.9734279 0.9758595 0.9774482 0.9824382 0.9955540 0.9960562 ## [23,] 0.9945111 0.9945591 0.9948888 0.9942961 0.9955739 0.9956349 ## [24,] 0.9885644 0.9886113 0.9885793 0.9928125 0.9937304 0.9988251 ## [25,] 0.9951281 0.9952564 0.9954811 0.9954014 0.9974985 0.9980222 ## [26,] 0.9964310 0.9972108 0.9979856 0.9981975 0.9982968 0.9987000 ## [27,] 0.9775228 0.9775558 0.9893696 0.9925197 0.9925590 0.9966334 ## [28,] 0.9949556 0.9977321 0.9977157 0.9979124 0.9986069 0.9997392 ## [29,] 0.9957248 0.9961986 0.9962686 0.9972338 0.9980382 0.9985455 ## [,32] [,33] [,34] ## [1,] 0.9990022 0.9999009 1 ## [2,] 0.9997874 0.9999009 1 ## [3,] 0.9985813 0.9990187 1 ## [4,] 0.9989564 0.9999009 1 ## [5,] 0.9987147 0.9990716 1 ## [6,] 0.9995049 0.9999052 1 ## [7,] 0.9991768 0.9992640 1 ## [8,] 0.9987408 0.9987311 1 ## [9,] 0.9998557 0.9999589 1 ## [10,] 0.9990915 0.9992295 1 ## [11,] 0.9998132 0.9998987 1 ## [12,] 0.9975884 0.9995940 1 ## [13,] 0.9989679 0.9998905 1 ## [14,] 0.9990005 0.9990716 1 ## [15,] 0.9988764 0.9990716 1 ## [16,] 0.9959809 0.9999024 1 ## [17,] 0.9979557 0.9987311 1 ## [18,] 0.9985929 0.9989135 1 ## [19,] 0.9991822 0.9999223 1 ## [20,] 0.9990673 0.9998388 1 ## [21,] 0.9984683 0.9998522 1 ## [22,] 0.9961147 0.9961313 1 ## [23,] 0.9960827 0.9961313 1 ## [24,] 0.9993620 0.9995199 1 ## [25,] 0.9991866 0.9999325 1 ## [26,] 0.9988013 0.9987820 1 ## [27,] 0.9984295 0.9998388 1 ## [28,] 0.9998371 0.9998713 1 ## [29,] 0.9993773 0.9995199 1 ## [ reached getOption(&quot;max.print&quot;) -- omitted 971 rows ] ## ## $median.fit ## [1] NA NA 0.5634883 0.7257626 0.7986187 0.8482382 0.8828335 ## [8] 0.9070023 0.9242932 0.9356869 0.9461682 0.9535433 0.9597079 0.9661862 ## [15] 0.9706376 0.9745222 0.9777078 0.9806674 0.9835761 0.9853758 0.9871176 ## [22] 0.9887219 0.9903751 0.9915423 0.9926556 0.9937729 0.9946816 0.9955221 ## [29] 0.9965758 0.9976532 0.9983949 0.9989467 0.9995199 1.0000000 ## ## $maxfit.landmark ## &lt; table of extent 0 &gt; ## ## $minfit.landmark ## &lt; table of extent 0 &gt; ## ## $fit.cs ## [1] NA NA 0.9767335 0.9825999 0.9866121 0.9895308 0.9916337 ## [8] 0.9931670 0.9942482 0.9951911 0.9958707 0.9963864 0.9968554 0.9972614 ## [15] 0.9976126 0.9979296 0.9980849 0.9982816 0.9984487 0.9986183 0.9988272 ## [22] 0.9989517 0.9990731 0.9992150 0.9993105 0.9994169 0.9995024 0.9995869 ## [29] 0.9996728 0.9997476 0.9998153 0.9998931 0.9999553 1.0000000 Results demonstrate that eight landmarks are necessary to achieve a median fit value of 0.90, 12 to achieve a median fit value of 0.95, and 23 to achieve a fit value of 0.99. For centroid size, seven landmarks were needed to achieve a median fit value of 0.99. knitr::include_graphics(&#39;images/lasec.png&#39;) (#fig:fig.lasec.EX)Sampling curves from performing LaSEC on the dataset with respect to characterising shape variation. Each gray line indicates fit values from one iteration of subsampling. Thick, dark line denotes median fit value at each number of landmarks. LaSEC sampling curve for shape (left), and for centroid size (right). Results produced using the code above for this 3D dataset, using 1,000 iterations. Images converted to PNG following export. Results demonstrate saltation, illustrating that some landmarks are critical for capturing shape information (Watanabe 2018). Dynamic as Dalton points may be in shape, that variation may be captured with a configuration of landmarks that employed fewer semilandmarks. References "],
["analysis-of-dalton-point-morphology.html", "Chapter 4 Analysis of Dalton point morphology 4.1 Load packages + data 4.2 Generalized Procrustes Analysis 4.3 Boxplots by centroid size 4.4 Principal Components Analysis 4.5 Define models 4.6 Allometry 4.7 Test Hypothesis 1 (Geo) 4.8 Test Hypothesis 2 (Geo) 4.9 Test Hypothesis 3 (Techno) 4.10 Test Hypothesis 4 (Techno)", " Chapter 4 Analysis of Dalton point morphology 4.1 Load packages + data # load packages # devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) library(geomorph) library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.0 -- ## v ggplot2 3.3.2 v purrr 0.3.4 ## v tibble 3.0.3 v dplyr 1.0.2 ## v tidyr 1.1.2 v stringr 1.4.0 ## v readr 1.3.1 v forcats 0.5.0 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::arrange() masks Momocs::arrange() ## x tidyr::chop() masks Momocs::chop() ## x dplyr::combine() masks Momocs::combine() ## x dplyr::filter() masks Momocs::filter(), stats::filter() ## x dplyr::lag() masks stats::lag() ## x dplyr::sample_frac() masks Momocs::sample_frac() ## x dplyr::sample_n() masks Momocs::sample_n() ## x dplyr::select() masks MASS::select(), Momocs::select() ## x dplyr::slice() masks Momocs::slice() library(wesanderson) # setwd setwd(getwd()) # read GM data source(&#39;readmulti.csv.R&#39;) # read .csv files setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]],rownames(qdata)),] # print qdata knitr::kable(qdata, align = &quot;cccc&quot;, caption = &quot;Attributes included in qdata.&quot;) (#tab:load.data)Attributes included in qdata. heart.out heart.reg bev bev.type 11AI225 H H y unifacial.bimarginal 11HE445 N P n no.bevel HK49_1462 N I n no.bevel HK49_2 N I n no.bevel HK49_3022 N I n no.bevel HK49_3823 N I n no.bevel HK49_4 N I n no.bevel HK49_5928 N I y alternate HK49_5961 N I n no.bevel HK49_7 N I y unifacial.bimarginal KeilMangold10 H H y alternate KeilMangold13 H H y alternate KeilMangold14 H H y alternate KeilMangold17 H H y alternate KeilMangold24 H H y alternate KeilMangold3 H H y alternate KeilMangold8 H H y alternate Kinzer46 N P n no.bevel Kinzer49 N P n no.bevel Welton5 N P y unifacial.bimarginal 4.2 Generalized Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalized Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.2 (R Core Development Team, 2020) using the geomorph library v. 3.3.1 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # output + consensus configuration coords Y.gpa ## ## Call: ## gpagen(A = coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, ## print.progress = FALSE) ## ## ## ## Generalized Procrustes Analysis ## with Partial Procrustes Superimposition ## ## 34 fixed landmarks ## 0 semilandmarks (sliders) ## 3-dimensional landmarks ## 2 GPA iterations to converge ## ## ## Consensus (mean) Configuration ## ## X Y Z ## 1 -0.326964110 -5.496484e-04 -1.435783e-03 ## 2 0.214322797 1.174470e-01 -4.414246e-05 ## 3 0.209847898 -1.236033e-01 1.433593e-03 ## 4 0.086495589 1.223069e-01 -1.610342e-03 ## 5 0.080190193 -1.197655e-01 8.468350e-05 ## 6 0.194733234 -2.508820e-03 4.994972e-04 ## 7 -0.245055642 4.838382e-02 1.859972e-03 ## 8 -0.162994676 7.387978e-02 4.225334e-04 ## 9 -0.080868565 8.704805e-02 8.822250e-04 ## 10 0.001279164 1.002547e-01 1.596956e-04 ## 11 0.143348583 1.144603e-01 -2.023955e-03 ## 12 0.214725840 5.916507e-02 -1.063111e-03 ## 13 0.214119277 -6.574629e-02 5.761651e-04 ## 14 0.135166306 -1.157978e-01 3.080523e-04 ## 15 0.002288848 -9.670093e-02 -1.905958e-03 ## 16 -0.079992149 -8.518027e-02 -1.388106e-03 ## 17 -0.162292562 -7.225936e-02 -2.051871e-03 ## 18 -0.244609649 -5.026964e-02 -1.854068e-03 ## 19 -0.244837453 -2.217482e-04 2.111707e-02 ## 20 -0.162643425 2.484701e-04 2.833843e-02 ## 21 -0.080461721 6.062743e-04 3.095970e-02 ## 22 0.001775062 1.067340e-03 2.968620e-02 ## 23 0.083323050 1.417364e-03 2.618646e-02 ## 24 0.138901130 -5.186483e-04 1.899507e-02 ## 25 0.139362553 -6.654529e-04 -1.922060e-02 ## 26 0.083347109 1.202092e-03 -2.586223e-02 ## 27 0.001895695 8.261458e-04 -2.871394e-02 ## 28 -0.080326354 4.602540e-04 -2.874281e-02 ## 29 -0.162564672 3.730724e-05 -2.587689e-02 ## 30 -0.244777259 -2.930378e-04 -2.055985e-02 ## 31 0.084986247 6.518465e-02 2.279628e-02 ## 32 0.081631227 -6.210678e-02 2.368055e-02 ## 33 0.081681902 -6.231709e-02 -2.285489e-02 ## 34 0.084966533 6.450885e-02 -2.277763e-02 # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, heart = qdata$heart.out, hreg = qdata$heart.reg, bev.1 = qdata$bev, bev.2 = qdata$bev.type) # plot consensus configuration par(mfrow=c(1, 3)) plot(Y.gpa$consensus[,c(&quot;Y&quot;, &quot;X&quot;)], pch=20) plot(Y.gpa$consensus[,c(&quot;Z&quot;, &quot;X&quot;)], pch=20) plot(Y.gpa$consensus[,c(&quot;Z&quot;, &quot;Y&quot;)], pch=20) Figure 4.1: 2D plot of 3D consensus configuration. # render 3d gpa plot #plot(Y.gpa) # gpa plot # knitr::include_graphics(&#39;images/gpa3d.png&#39;) 4.3 Boxplots by centroid size # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;ccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) (#tab:box.attr)Modified attributes included in qdata. heart.out heart.reg bev bev.type csz 11AI225 H H y unifacial.bimarginal 111.17971 11HE445 N P n no.bevel 125.68376 HK49_1462 N I n no.bevel 106.02942 HK49_2 N I n no.bevel 77.88910 HK49_3022 N I n no.bevel 100.02205 HK49_3823 N I n no.bevel 112.93309 HK49_4 N I n no.bevel 118.11018 HK49_5928 N I y alternate 121.33863 HK49_5961 N I n no.bevel 102.86813 HK49_7 N I y unifacial.bimarginal 104.40945 KeilMangold10 H H y alternate 126.59440 KeilMangold13 H H y alternate 143.47265 KeilMangold14 H H y alternate 147.46915 KeilMangold17 H H y alternate 105.16645 KeilMangold24 H H y alternate 111.45604 KeilMangold3 H H y alternate 126.88410 KeilMangold8 H H y alternate 104.38197 Kinzer46 N P n no.bevel 92.72096 Kinzer49 N P n no.bevel 86.46909 Welton5 N P y unifacial.bimarginal 188.68723 # attributes for boxplots csz &lt;- qdata$csz # centroid size heart &lt;- qdata$heart.out # heartland in/out hreg &lt;- qdata$heart.reg # heartland region bev.1 &lt;- qdata$bev # beveled yes/no bev.2 &lt;- qdata$bev.type # type of beveling # boxplot of Dalton point centroid size by in/out heartland csz.hrt &lt;- ggplot(qdata, aes(x = heart, y = csz, color = heart)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;In Heartland?&#39;, y = &#39;Centroid Size&#39;) # render plot csz.hrt ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.2: Boxplot of centroid size by Heartland (in/out). # boxplot of Dalton point centroid size by heartland + regions csz.hreg &lt;- ggplot(qdata, aes(x = hreg, y = csz, color = hreg)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Heartland Region&#39;, y = &#39;Centroid Size&#39;) # render plot csz.hreg ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.3: Boxplot of centroid size by Heartland region. # boxplot of Dalton point centroid size by beveled y/n csz.bev.1 &lt;- ggplot(qdata, aes(x = bev.1, y = csz, color = bev.1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Beveled?&#39;, y = &#39;Centroid Size&#39;) # render plot csz.bev.1 ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.4: Boxplot of centroid size by beveled. # boxplot of Dalton point centroid size by bevel type csz.bev.2 &lt;- ggplot(qdata, aes(x = bev.2, y = csz, color = bev.2)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Bevel Type&#39;, y = &#39;Centroid Size&#39;) # render plot csz.bev.2 ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 4.5: Boxplot of centroid size by bevel type. 4.4 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bifaces. The shape changes described by each principal axis are commonly visualized using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering and projection: OLS ## Number of observations 20 ## Number of vectors 20 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 ## Eigenvalues 0.01088902 0.001751307 0.001332042 0.0004539976 ## Proportion of Variance 0.68827450 0.110696846 0.084195899 0.0286963445 ## Cumulative Proportion 0.68827450 0.798971345 0.883167244 0.9118635888 ## Comp5 Comp6 Comp7 Comp8 ## Eigenvalues 0.0003415665 0.000231028 0.0001813442 0.0001434858 ## Proportion of Variance 0.0215897827 0.014602849 0.0114624283 0.0090694738 ## Cumulative Proportion 0.9334533715 0.948056220 0.9595186487 0.9685881224 ## Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 9.800377e-05 8.350814e-05 7.258745e-05 0.0000532005 ## Proportion of Variance 6.194636e-03 5.278395e-03 4.588118e-03 0.0033627052 ## Cumulative Proportion 9.747828e-01 9.800612e-01 9.846493e-01 0.9880119765 ## Comp13 Comp14 Comp15 Comp16 ## Eigenvalues 0.0000399704 3.899308e-05 3.717557e-05 2.418819e-05 ## Proportion of Variance 0.0025264550 2.464680e-03 2.349799e-03 1.528891e-03 ## Cumulative Proportion 0.9905384315 9.930031e-01 9.953529e-01 9.968818e-01 ## Comp17 Comp18 Comp19 Comp20 ## Eigenvalues 2.011341e-05 1.812459e-05 1.109423e-05 1.396792e-33 ## Proportion of Variance 1.271331e-03 1.145622e-03 7.012458e-04 8.828863e-32 ## Cumulative Proportion 9.981531e-01 9.992988e-01 1.000000e+00 1.000000e+00 # set plot parameters to plot by heartland in (H) and out (N) pch.gps.heart &lt;- c(15,17)[as.factor(heart)] col.gps.heart &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(heart)] col.hull &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by heartland in (H) and out (N) pc.plot1 &lt;- plot(pca, asp = 1, pch = pch.gps.heart, col = col.gps.heart) shapeHulls(pc.plot1, groups = heart, group.cols = col.hull) # set plot parameters to plot by heartland + regions pch.gps.hreg &lt;- c(15,17,18)[as.factor(hreg)] col.gps.hreg &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(hreg)] col.hull.2 &lt;- c(&quot;#798E87&quot;,&quot;#CCC591&quot;,&quot;#C27D38&quot;) # plot pca by heartland + regions pc.plot2 &lt;- plot(pca, asp = 1, pch = pch.gps.hreg, col = col.gps.hreg) shapeHulls(pc.plot2, groups = hreg, group.cols = col.hull.2) # set plot parameters to plot by beveled y and n pch.gps.bev.1 &lt;- c(15,17)[as.factor(bev.1)] col.gps.bev.1 &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(bev.1)] col.hull.3 &lt;- c(&quot;#C27D38&quot;,&quot;#798E87&quot;) # plot pca by heartland in (H) and out (N) pc.plot3 &lt;- plot(pca, asp = 1, pch = pch.gps.bev.1, col = col.gps.bev.1) shapeHulls(pc.plot3, groups = bev.1, group.cols = col.hull.3) # set plot parameters to plot by bevel type pch.gps.bev.2 &lt;- c(15,17,18)[as.factor(bev.2)] col.gps.bev.2 &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(bev.2)] col.hull.4 &lt;- c(&quot;#CCC591&quot;,&quot;#C27D38&quot;,&quot;#798E87&quot;) # plot pca by bevel type pc.plot4 &lt;- plot(pca, asp = 1, pch = pch.gps.bev.2, col = col.gps.bev.2) shapeHulls(pc.plot4, groups = bev.2, group.cols = col.hull.4) 4.5 Define models 4.5.1 Allometry # allometry fit.size &lt;- procD.lm(shape ~ size, data = gdf, print.progress = FALSE, iter = 9999) # allometry - common allometry, different means -&gt; heart fit.sz.cinc &lt;- procD.lm(shape ~ size + heart, data = gdf, print.progress = FALSE, iter = 9999) # allometry - unique allometries -&gt; heart fit.sz.uinc &lt;- procD.lm(shape ~ size * heart, data = gdf, print.progress = FALSE, iter = 9999) # allometry - common allometry, different means -&gt; hreg fit.sz.cinc2 &lt;- procD.lm(shape ~ size + hreg, data = gdf, print.progress = FALSE, iter = 9999) # allometry - unique allometries -&gt; hreg fit.sz.uinc2 &lt;- procD.lm(shape ~ size * hreg, data = gdf, print.progress = FALSE, iter = 9999) 4.5.2 Hypothesis 1 ## Define models # size as a function of heart fit.size.heart &lt;- procD.lm(size ~ heart, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of heart fit.shape.heart &lt;- procD.lm(shape ~ heart, data = gdf, print.progress = FALSE, iter = 9999) 4.5.3 Hypothesis 2 ## Define models # size as a function of hreg fit.size.hreg &lt;- procD.lm(size ~ hreg, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of hreg fit.shape.hreg &lt;- procD.lm(shape ~ hreg, data = gdf, print.progress = FALSE, iter = 9999) 4.5.4 Hypothesis 3 ## Define models # size as a function of bev.1 fit.size.bev.1 &lt;- procD.lm(size ~ bev.1, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of bev.1 fit.shape.bev.1 &lt;- procD.lm(shape ~ bev.1, data = gdf, print.progress = FALSE, iter = 9999) 4.5.5 Hypothesis 4 ## Define models # size as a function of bev.2 fit.size.bev.2 &lt;- procD.lm(size ~ bev.2, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of bev.2 fit.shape.bev.2 &lt;- procD.lm(shape ~ bev.2, data = gdf, print.progress = FALSE, iter = 9999) 4.6 Allometry # allometry - does shape change with size? anova(fit.size) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.12906 0.12906 0.42934 13.543 3.4998 1e-04 *** ## Residuals 18 0.17154 0.00953 0.57066 ## Total 19 0.30059 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size, iter = 9999, data = gdf, print.progress = FALSE) 4.6.1 Common allometry # inc anova(fit.sz.cinc) # common allometry (inc) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.12906 0.129058 0.42934 16.6772 3.7454 1e-04 *** ## heart 1 0.03998 0.039980 0.13300 5.1664 2.6311 0.007 ** ## Residuals 17 0.13156 0.007739 0.43765 ## Total 19 0.30059 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size + heart, iter = 9999, data = gdf, ## print.progress = FALSE) # inc2 anova(fit.sz.cinc2) # common allometry (inc2) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.129058 0.129058 0.42934 17.357 3.7883 1e-04 *** ## hreg 2 0.052568 0.026284 0.17488 3.535 2.4551 0.0081 ** ## Residuals 16 0.118968 0.007435 0.39578 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size + hreg, iter = 9999, data = gdf, print.progress = FALSE) # allometry plots # regscore (Drake and Klingenberg 2008) plot(fit.size, type = &quot;regression&quot;, reg.type = &quot;RegScore&quot;, predictor = log(gdf$size), pch = pch.gps.heart, col = col.gps.heart) plot(fit.size, type = &quot;regression&quot;, reg.type = &quot;RegScore&quot;, predictor = log(gdf$size), pch = pch.gps.hreg, col = col.gps.hreg) # common allometric component (Mitteroecker 2004) plotAllometry(fit.size, size = gdf$size, logsz = TRUE, method = &quot;CAC&quot;, pch = pch.gps.heart, col = col.gps.heart) plotAllometry(fit.size, size = gdf$size, logsz = TRUE, method = &quot;CAC&quot;, pch = pch.gps.hreg, col = col.gps.hreg) # size-shape pca (Mitteroecker 2004) plotAllometry(fit.size, size = gdf$size, logsz = TRUE, method = &quot;size.shape&quot;, pch = pch.gps.heart, col = col.gps.heart) plotAllometry(fit.size, size = gdf$size, logsz = TRUE, method = &quot;size.shape&quot;, pch = pch.gps.hreg, col = col.gps.hreg) 4.6.2 Unique allometry # heart anova(fit.sz.uinc) # unique allometry (heart) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.129058 0.129058 0.42934 16.6092 3.7462 1e-04 *** ## heart 1 0.039980 0.039980 0.13300 5.1453 2.6199 0.007 ** ## size:heart 1 0.007232 0.007232 0.02406 0.9307 0.2024 0.403 ## Residuals 16 0.124324 0.007770 0.41360 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size * heart, iter = 9999, data = gdf, ## print.progress = FALSE) # hreg anova(fit.sz.uinc2) # unique allometry (hreg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.129058 0.129058 0.42934 16.7351 3.7551 1e-04 *** ## hreg 2 0.052568 0.026284 0.17488 3.4083 2.3640 0.0115 * ## size:hreg 2 0.011002 0.005501 0.03660 0.7134 -0.4116 0.6473 ## Residuals 14 0.107965 0.007712 0.35917 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size * hreg, iter = 9999, data = gdf, print.progress = FALSE) # predline (Adams and Nistri 2010) plotAllometry(fit.sz.uinc, size = gdf$size, logsz = TRUE, method = &quot;PredLine&quot;, pch = pch.gps.heart, col = col.gps.heart) plotAllometry(fit.sz.uinc2, size = gdf$size, logsz = TRUE, method = &quot;PredLine&quot;, pch = pch.gps.hreg, col = col.gps.hreg) 4.7 Test Hypothesis 1 (Geo) Hypothesis 1 assesses whether there is a difference in morphology for Dalton points found in and out of the heartland. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis1.jpg&#39;) (#fig:lm3d3.a1.h1)Hypothesis 1 considers whether Dalton points discovered in (left) and out (right) of the Heartland differ in morphology. # ANOVA: do dalton projectile point sizes differ by heart? anova(fit.size.heart) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## heart 1 544 543.96 0.04849 0.9173 0.47408 0.3658 ## Residuals 18 10674 592.98 0.95151 ## Total 19 11218 ## ## Call: procD.lm(f1 = size ~ heart, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do dalton projectile point shapes differ by heart? anova(fit.shape.heart) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## heart 1 0.066826 0.066826 0.22231 5.1455 2.3188 0.0137 * ## Residuals 18 0.233769 0.012987 0.77769 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ heart, iter = 9999, data = gdf, print.progress = FALSE) 4.8 Test Hypothesis 2 (Geo) Hypothesis 2 assesses whether there is a difference in morphology for Dalton points found in the heartland, the interior, and the northern periphery. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis2.jpg&#39;) (#fig:lm3d3.a1.h2)Hypothesis 2 considers whether Dalton points discovered in the heartland (left), interior (center), and northern periphery (right) differ in morphology. # ANOVA: does dalton projectile point size differ by hreg? anova(fit.size.hreg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## hreg 2 1402.2 701.12 0.125 1.2143 0.52153 0.324 ## Residuals 17 9815.3 577.37 0.875 ## Total 19 11217.5 ## ## Call: procD.lm(f1 = size ~ hreg, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sz.hreg &lt;- pairwise(fit.size.hreg, groups = qdata$heart.reg) summary(sz.hreg, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 16.625554 22.85776 0.9757888 0.1775 ## H:P 1.314703 28.93975 -1.2356693 0.9327 ## I:P 17.940257 28.78021 0.6640937 0.2421 # pairwise distance between variances = standardization? summary(sz.hreg, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## H I P ## 247.0858 158.2345 1643.1832 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 88.85136 788.5235 -1.562691 0.9314 ## H:P 1396.09736 1135.2677 2.642227 0.0070 ## I:P 1484.94872 1132.3143 2.916284 0.0027 # ANOVA: does dalton projectile point shape differ by hreg? anova(fit.shape.hreg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## hreg 2 0.076358 0.038179 0.25402 2.8945 1.8315 0.0388 * ## Residuals 17 0.224236 0.013190 0.74598 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ hreg, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sh.hreg &lt;- pairwise(fit.shape.hreg, groups = qdata$heart.reg) summary(sz.hreg, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 16.625554 22.85776 0.9757888 0.1775 ## H:P 1.314703 28.93975 -1.2356693 0.9327 ## I:P 17.940257 28.78021 0.6640937 0.2421 # pairwise distance between variances = standardization? summary(sz.hreg, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## H I P ## 247.0858 158.2345 1643.1832 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 88.85136 788.5235 -1.562691 0.9314 ## H:P 1396.09736 1135.2677 2.642227 0.0070 ## I:P 1484.94872 1132.3143 2.916284 0.0027 4.9 Test Hypothesis 3 (Techno) Hypothesis 3 assesses whether there is a discernible difference in morphology for Dalton points that are beveled. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis3.jpg&#39;) (#fig:lm3d3.a1.h3)Hypothesis 3 considers whether beveled Dalton points (left) differ in morphology from those that are not beveled (right). # ANOVA: do dalton projectile point sizes differ by beveling? anova(fit.size.bev.1) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.1 1 2835.3 2835.32 0.25276 6.0886 1.3572 0.0151 * ## Residuals 18 8382.2 465.68 0.74724 ## Total 19 11217.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = size ~ bev.1, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do dalton projectile point shapes differ by beveling? anova(fit.shape.bev.1) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.1 1 0.087904 0.087904 0.29244 7.4394 2.7633 0.0025 ** ## Residuals 18 0.212690 0.011816 0.70756 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ bev.1, iter = 9999, data = gdf, print.progress = FALSE) 4.10 Test Hypothesis 4 (Techno) Hypothesis 4 assesses whether there is a discernible difference in the morphology of specific beveling types associated with Dalton points. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis4-1.jpg&#39;) (#fig:lm3d3.a1.h4)Hypothesis 4 considers whether discrete beveling practices articulate with differences in the morphology of Dalton points # ANOVA: does dalton projectile point size differ by bev.2? anova(fit.size.bev.2) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.2 2 3119.5 1559.77 0.27809 3.2744 1.3051 0.0562 . ## Residuals 17 8098.0 476.35 0.72191 ## Total 19 11217.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = size ~ bev.2, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sz.bev.2 &lt;- pairwise(fit.size.bev.2, groups = qdata$bev.type) summary(sz.bev.2, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 20.82034 21.72601 1.681008 0.0632 ## alternate:unifacial.bimarginal 11.41337 32.00230 -0.166745 0.4847 ## no.bevel:unifacial.bimarginal 32.23371 31.58037 2.000539 0.0443 # pairwise distance between variances = standardization? summary(sz.bev.2, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## alternate no.bevel unifacial.bimarginal ## 230.7012 207.4508 1461.7774 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 23.25044 511.8362 -1.826811 0.9771 ## alternate:unifacial.bimarginal 1231.07620 929.4305 3.239259 0.0033 ## no.bevel:unifacial.bimarginal 1254.32664 927.5379 3.378133 0.0015 # ANOVA: does dalton projectile point shape differ by bev.2? anova(fit.shape.bev.2) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.2 2 0.13402 0.067010 0.44585 6.8388 3.1541 6e-04 *** ## Residuals 17 0.16658 0.009799 0.55415 ## Total 19 0.30059 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ bev.2, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sh.bev.2 &lt;- pairwise(fit.shape.bev.2, groups = qdata$bev.type) summary(sz.bev.2, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 20.82034 21.72601 1.681008 0.0632 ## alternate:unifacial.bimarginal 11.41337 32.00230 -0.166745 0.4847 ## no.bevel:unifacial.bimarginal 32.23371 31.58037 2.000539 0.0443 # pairwise distance between variances = standardization? summary(sz.bev.2, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## alternate no.bevel unifacial.bimarginal ## 230.7012 207.4508 1461.7774 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 23.25044 511.8362 -1.826811 0.9771 ## alternate:unifacial.bimarginal 1231.07620 929.4305 3.239259 0.0033 ## no.bevel:unifacial.bimarginal 1254.32664 927.5379 3.378133 0.0015 References "],
["references.html", "References", " References "]
]
