[
["index.html", "Landmark 3D geometric morphometrics of Dalton projectile points Preface 0.1 Acknowledgments 0.2 Funding", " Landmark 3D geometric morphometrics of Dalton projectile points Robert Z. Selden, Jr.1 2020-09-21 Preface Reproducibility—the ability to recompute results—and replicability—the chances other experimenters will achieve a consistent result—are two foundational characteristics of successful scientific research (Leek and Peng 2015). This volume is written in Markdown, and all files needed to reproduce it are included in the GitHub repository. The reproducible nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. Reproducibility projects in psychology and cancer biology are impacting current research practices across all domains. Examples of reproducible research are becoming more abundant in archaeology (Marwick 2016; Ivanovaitė et al. 2020; Selden Jr., Dockall, and Dubied 2020), and the next generation of archaeologists are learning those tools and methods needed to reproduce and/or replicate research results (Marwick et al. 2019). Reproducible and replicable research work flows are often employed at the highest levels of humanities-based inquiries to mitigate concern or doubt regarding proper execution, and is of particular import should the results have—explicitly or implicitly—a major impact on scientific progress (Peels and Bouter 2018). Components of the undertaking presented in this volume are novel, and this basic research endeavour is rooted in archaeological epistemology. Sharing data is not enough, and if investigators share only data absent their analysis code, that places a substantive burden on those who may seek to build upon or replicate their work in the future. In this instance, the choice to pursue a replicable work flow occurs based on the simple fact that this work is foundational, and meant to begin a meaningful discussion related to projectile morphology. As an exploratory research endeavour, this study was not preregistered. 0.1 Acknowledgments I extend my gratitude to Christian S. Hoggard and David K. Thulman for their thoughtful comments and constructive criticisms on the draft of the landmarking protocol developed for the study of Gahagan bifaces (Selden Jr., Dockall, and Dubied 2020), which is extended here for an analysis of Dalton point morphology. This iteration of the landmarking protocol was developed using the digit3DLand package in R. 0.2 Funding Components of this analytical work flow were developed and funded by a Preservation Technology and Training grant (P14AP00138) to the author from the National Center for Preservation Technology and Training (NCPTT), as well as grants from the National Forests and Grasslands in Texas (15-PA-11081300-033) and the United States Forest Service (20-PA-11081300-074). References "],
["elliptic-fourier-analysis.html", "Chapter 1 Elliptic Fourier Analysis 1.1 Load packages + data 1.2 Generate outlines 1.3 Stack and panels 1.4 Calibrate harmonic + EFA 1.5 PCA 1.6 MANOVA + MANOVA_PW 1.7 Mean shapes", " Chapter 1 Elliptic Fourier Analysis 1.1 Load packages + data # load packages library(here) library(wesanderson) library(Momocs) # read images + attribute data jpg.list &lt;- list.files(here(&quot;/jpeg&quot;), full.names = TRUE) att.data &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, as.is = TRUE) # attributes to factors att.data$heart.out &lt;- as.factor(att.data$heart.out) att.data$heart.reg &lt;- as.factor(att.data$heart.reg) att.data$bev &lt;- as.factor(att.data$bev) att.data$bev.type &lt;- as.factor(att.data$bev.type) 1.2 Generate outlines outlines &lt;- jpg.list %&gt;% import_jpg() ## Extracting 45.jpg outlines... ## [ 1 / 45 ] 11AI225.jpg ## [ 2 / 45 ] 11HE445.jpg ## [ 3 / 45 ] HK49_1462.jpg ## [ 4 / 45 ] HK49_2.jpg ## [ 5 / 45 ] HK49_3022.jpg ## [ 6 / 45 ] HK49_3823.jpg ## [ 7 / 45 ] HK49_4.jpg ## [ 8 / 45 ] HK49_5928.jpg ## [ 9 / 45 ] HK49_5961.jpg ## [ 10 / 45 ] HK49_7.jpg ## [ 11 / 45 ] Keil-Mangold3.jpg ## [ 12 / 45 ] KeilMangold10.jpg ## [ 13 / 45 ] KeilMangold13.jpg ## [ 14 / 45 ] KeilMangold14.jpg ## [ 15 / 45 ] KeilMangold17.jpg ## [ 16 / 45 ] KeilMangold24.jpg ## [ 17 / 45 ] KeilMangold42.jpg ## [ 18 / 45 ] KeilMangold64.jpg ## [ 19 / 45 ] KeilMangold8.jpg ## [ 20 / 45 ] KeilMangold90.jpg ## [ 21 / 45 ] Kinzer46.jpg ## [ 22 / 45 ] Kinzer49.jpg ## [ 23 / 45 ] Kinzer50.jpg ## [ 24 / 45 ] Leprechaun11MS1983FSI800-5.jpg ## [ 25 / 45 ] MA1699p1.jpg ## [ 26 / 45 ] MA1699p3.jpg ## [ 27 / 45 ] McL4_158.jpg ## [ 28 / 45 ] McL4_614.jpg ## [ 29 / 45 ] McL7_101.jpg ## [ 30 / 45 ] McL7_168.jpg ## [ 31 / 45 ] Nochta11MS128BFSI267-1.jpg ## [ 32 / 45 ] Nochta11MS128bFSIPP1001.jpg ## [ 33 / 45 ] Nochta11MS128BFSIPP2495.jpg ## [ 34 / 45 ] Nochta11MS128BFSIPP3305.jpg ## [ 35 / 45 ] Nochta11MS12BFIS800-168.jpg ## [ 36 / 45 ] OH1_176.jpg ## [ 37 / 45 ] ReedVoss2.jpg ## [ 38 / 45 ] TR10_19.jpg ## [ 39 / 45 ] TR10_4.jpg ## [ 40 / 45 ] Welton1.jpg ## [ 41 / 45 ] Welton2.jpg ## [ 42 / 45 ] Welton3.jpg ## [ 43 / 45 ] Welton4.jpg ## [ 44 / 45 ] Welton5.jpg ## [ 45 / 45 ] Welton6.jpg ## Done in 6.7 secs data.out &lt;- Out(outlines, fac = att.data) norm.outlines &lt;- data.out %&gt;% coo_center %&gt;% coo_scale() 1.3 Stack and panels # outline stack stack(norm.outlines) ## will soon be deprecated, see ?pile # panels par(mfrow = c(2,2)) mosaic(data.out, ~heart.out, asp = 1, palette = pal_qual_Dark2) mosaic(data.out, ~heart.reg, asp = 1, palette = pal_qual_Dark2) mosaic(data.out, ~bev, asp = 1, palette = pal_qual_Dark2) mosaic(data.out, ~bev.type, asp = 1, palette = pal_qual_Dark2) 1.4 Calibrate harmonic + EFA calibrate_harmonicpower_efourier(norm.outlines) ## $gg ## ## $q ## h1 h2 h3 h4 h5 h6 h7 h8 h9 ## 11AI225 65.76904 71.47028 90.94189 93.25239 97.79672 97.99095 98.40472 98.87328 98.93888 ## 11HE445 31.66941 67.90523 87.64311 90.25066 96.67793 97.34122 98.72999 99.00600 99.05095 ## h10 h11 h12 h13 h14 h15 h16 h17 h18 ## 11AI225 99.34035 99.52850 99.56479 99.68341 99.75225 99.81241 99.82872 99.83903 99.85432 ## 11HE445 99.33530 99.39369 99.60894 99.69180 99.72818 99.75081 99.75791 99.82529 99.84558 ## h19 h20 h21 h22 h23 h24 h25 h26 h27 ## 11AI225 99.85917 99.89730 99.90229 99.90496 99.91404 99.91466 99.91878 99.92349 99.92641 ## 11HE445 99.86002 99.86465 99.87880 99.88311 99.89611 99.90364 99.91052 99.91746 99.92106 ## h28 h29 h30 h31 h32 h33 h34 h35 h36 ## 11AI225 99.92799 99.92868 99.93842 99.93901 99.94263 99.94864 99.95333 99.96133 99.96349 ## 11HE445 99.92930 99.93138 99.93316 99.93779 99.93833 99.94076 99.94169 99.94642 99.95258 ## h37 h38 h39 h40 h41 h42 h43 h44 h45 ## 11AI225 99.96511 99.96589 99.96662 99.96780 99.97071 99.97238 99.97287 99.97390 99.97457 ## 11HE445 99.95518 99.95681 99.95791 99.95959 99.95996 99.96115 99.96174 99.96265 99.96314 ## h46 h47 h48 h49 h50 h51 h52 h53 h54 ## 11AI225 99.97533 99.97628 99.97667 99.97710 99.97753 99.97817 99.97857 99.97885 99.98002 ## 11HE445 99.96377 99.96602 99.96718 99.96924 99.97069 99.97265 99.97396 99.97430 99.97518 ## h55 h56 h57 h58 h59 h60 h61 h62 h63 ## 11AI225 99.98050 99.98116 99.98251 99.98315 99.98443 99.98463 99.98496 99.98507 99.98527 ## 11HE445 99.97674 99.97705 99.97771 99.97995 99.98148 99.98227 99.98344 99.98451 99.98477 ## h64 h65 h66 h67 h68 h69 h70 h71 h72 ## 11AI225 99.98562 99.98593 99.98628 99.98650 99.98673 99.98695 99.98718 99.98752 99.98785 ## 11HE445 99.98524 99.98566 99.98627 99.98646 99.98660 99.98663 99.98672 99.98767 99.98782 ## h73 h74 h75 h76 h77 h78 h79 h80 h81 ## 11AI225 99.98802 99.98818 99.98841 99.98849 99.98883 99.98887 99.98937 99.98958 99.98978 ## 11HE445 99.98795 99.98803 99.98838 99.98857 99.98869 99.98878 99.98886 99.98898 99.98913 ## h82 h83 h84 h85 h86 h87 h88 h89 h90 ## 11AI225 99.98991 99.98996 99.99007 99.99023 99.99046 99.99059 99.99081 99.99090 99.99107 ## 11HE445 99.98936 99.98939 99.98947 99.98981 99.99029 99.99033 99.99050 99.99060 99.99079 ## h91 h92 h93 h94 h95 h96 h97 h98 h99 ## 11AI225 99.99115 99.99123 99.99132 99.99145 99.99153 99.99163 99.99169 99.99185 99.99191 ## 11HE445 99.99096 99.99107 99.99119 99.99133 99.99136 99.99161 99.99173 99.99180 99.99217 ## h100 h101 h102 h103 h104 h105 h106 h107 h108 ## 11AI225 99.99193 99.99198 99.99199 99.99214 99.99215 99.99216 99.99217 99.99222 99.99243 ## 11HE445 99.99232 99.99240 99.99241 99.99247 99.99251 99.99254 99.99269 99.99277 99.99290 ## h109 h110 h111 h112 h113 h114 h115 h116 h117 ## 11AI225 99.99247 99.99255 99.99260 99.99265 99.99274 99.99301 99.99309 99.99317 99.99319 ## 11HE445 99.99296 99.99296 99.99298 99.99299 99.99309 99.99318 99.99328 99.99333 99.99357 ## h118 h119 h120 h121 h122 h123 h124 h125 h126 ## 11AI225 99.99332 99.99337 99.99343 99.99352 99.99354 99.99364 99.99366 99.99368 99.99380 ## 11HE445 99.99369 99.99372 99.99384 99.99392 99.99395 99.99405 99.99420 99.99425 99.99433 ## h127 h128 h129 h130 h131 h132 h133 h134 h135 ## 11AI225 99.99384 99.99391 99.99392 99.99396 99.99404 99.99408 99.99412 99.99413 99.99418 ## 11HE445 99.99451 99.99458 99.99463 99.99468 99.99474 99.99486 99.99494 99.99499 99.99505 ## h136 h137 h138 h139 h140 h141 h142 h143 h144 ## 11AI225 99.99421 99.99424 99.99430 99.99430 99.99434 99.99437 99.99440 99.99443 99.99443 ## 11HE445 99.99523 99.99527 99.99529 99.99539 99.99554 99.99555 99.99557 99.99558 99.99558 ## h145 h146 h147 h148 h149 h150 h151 h152 h153 ## 11AI225 99.99447 99.99453 99.99453 99.99460 99.99464 99.99490 99.99495 99.99504 99.99511 ## 11HE445 99.99560 99.99566 99.99572 99.99573 99.99575 99.99580 99.99581 99.99587 99.99589 ## h154 h155 h156 h157 h158 h159 h160 h161 h162 ## 11AI225 99.99512 99.99516 99.99520 99.99522 99.99529 99.99532 99.99537 99.99540 99.99545 ## 11HE445 99.99595 99.99604 99.99616 99.99621 99.99625 99.99627 99.99629 99.99630 99.99631 ## h163 h164 h165 h166 h167 h168 h169 h170 h171 ## 11AI225 99.99547 99.99549 99.99550 99.99555 99.99557 99.99562 99.99562 99.99563 99.99567 ## 11HE445 99.99634 99.99635 99.99635 99.99636 99.99637 99.99638 99.99643 99.99647 99.99648 ## h172 h173 h174 h175 h176 h177 h178 h179 h180 ## 11AI225 99.99572 99.99574 99.99577 99.99585 99.99587 99.99587 99.99589 99.99591 99.99594 ## 11HE445 99.99649 99.99651 99.99655 99.99660 99.99660 99.99662 99.99668 99.99674 99.99677 ## h181 h182 h183 h184 h185 h186 h187 h188 h189 ## 11AI225 99.99598 99.99601 99.99608 99.99610 99.99612 99.99614 99.99616 99.99619 99.99621 ## 11HE445 99.99680 99.99681 99.99683 99.99684 99.99686 99.99689 99.99691 99.99701 99.99705 ## h190 h191 h192 h193 h194 h195 h196 h197 h198 ## 11AI225 99.99624 99.99625 99.99628 99.99629 99.99631 99.99634 99.99637 99.99637 99.99637 ## 11HE445 99.99709 99.99710 99.99712 99.99714 99.99717 99.99718 99.99719 99.99721 99.99725 ## h199 h200 h201 h202 h203 h204 h205 h206 h207 ## 11AI225 99.99638 99.99642 99.99643 99.99646 99.99647 99.99648 99.99648 99.99655 99.99660 ## 11HE445 99.99728 99.99728 99.99729 99.99729 99.99731 99.99732 99.99736 99.99737 99.99738 ## h208 h209 h210 h211 h212 h213 h214 h215 h216 ## 11AI225 99.99665 99.99669 99.99670 99.99677 99.99677 99.99678 99.99682 99.99685 99.99687 ## 11HE445 99.99739 99.99740 99.99741 99.99743 99.99744 99.99744 99.99745 99.99748 99.99748 ## h217 h218 h219 h220 h221 h222 h223 h224 h225 ## 11AI225 99.99694 99.99697 99.99698 99.99699 99.99709 99.99710 99.99714 99.99717 99.99720 ## 11HE445 99.99750 99.99752 99.99752 99.99754 99.99756 99.99758 99.99760 99.99768 99.99772 ## h226 h227 h228 h229 h230 h231 h232 h233 h234 ## 11AI225 99.99727 99.99731 99.99732 99.99737 99.99739 99.99740 99.99741 99.99750 99.99752 ## 11HE445 99.99774 99.99775 99.99777 99.99779 99.99781 99.99782 99.99783 99.99786 99.99791 ## h235 h236 h237 h238 h239 h240 h241 h242 h243 ## 11AI225 99.99755 99.99756 99.99757 99.99759 99.99759 99.99762 99.99766 99.99769 99.99770 ## 11HE445 99.99795 99.99799 99.99803 99.99807 99.99807 99.99808 99.99809 99.99810 99.99812 ## h244 h245 h246 h247 h248 h249 h250 h251 h252 ## 11AI225 99.99773 99.99777 99.99780 99.99783 99.99786 99.99787 99.99789 99.99791 99.99794 ## 11HE445 99.99813 99.99814 99.99817 99.99818 99.99819 99.99819 99.99823 99.99824 99.99826 ## h253 h254 h255 h256 h257 h258 h259 h260 h261 ## 11AI225 99.99795 99.99795 99.99798 99.99800 99.99802 99.99808 99.99809 99.99809 99.99812 ## 11HE445 99.99828 99.99829 99.99830 99.99831 99.99833 99.99835 99.99836 99.99839 99.99841 ## h262 h263 h264 h265 h266 h267 h268 h269 h270 ## 11AI225 99.99817 99.99817 99.99820 99.99824 99.99827 99.99833 99.99836 99.99836 99.99837 ## 11HE445 99.99843 99.99843 99.99844 99.99850 99.99851 99.99853 99.99854 99.99855 99.99855 ## h271 h272 h273 h274 h275 h276 h277 h278 h279 ## 11AI225 99.99839 99.99840 99.99844 99.99845 99.99847 99.99848 99.99850 99.99851 99.99853 ## 11HE445 99.99856 99.99857 99.99858 99.99860 99.99861 99.99861 99.99863 99.99864 99.99865 ## h280 h281 h282 h283 h284 h285 h286 h287 h288 ## 11AI225 99.99854 99.99854 99.99857 99.99860 99.99865 99.99870 99.99871 99.99871 99.99871 ## 11HE445 99.99866 99.99867 99.99870 99.99872 99.99873 99.99874 99.99875 99.99878 99.99882 ## h289 h290 h291 h292 h293 h294 h295 h296 h297 ## 11AI225 99.99874 99.99876 99.99877 99.99878 99.99880 99.99881 99.99884 99.99885 99.99887 ## 11HE445 99.99884 99.99887 99.99887 99.99888 99.99892 99.99892 99.99896 99.99896 99.99898 ## h298 h299 h300 h301 h302 h303 h304 h305 h306 ## 11AI225 99.99887 99.99887 99.99888 99.99888 99.99889 99.99889 99.99890 99.99890 99.99893 ## 11HE445 99.99898 99.99899 99.99899 99.99902 99.99903 99.99904 99.99904 99.99904 99.99905 ## h307 h308 h309 h310 h311 h312 h313 h314 h315 ## 11AI225 99.99895 99.99897 99.99898 99.99900 99.99901 99.99905 99.99906 99.99908 99.99909 ## 11HE445 99.99906 99.99908 99.99909 99.99910 99.99911 99.99913 99.99913 99.99914 99.99915 ## h316 h317 h318 h319 h320 h321 h322 h323 h324 ## 11AI225 99.99910 99.99911 99.99912 99.99913 99.99915 99.99915 99.99916 99.99917 99.99918 ## 11HE445 99.99918 99.99920 99.99921 99.99924 99.99925 99.99925 99.99925 99.99927 99.99927 ## h325 h326 h327 h328 h329 h330 h331 h332 h333 ## 11AI225 99.99918 99.99922 99.99925 99.99925 99.99925 99.99926 99.99926 99.99927 99.99927 ## 11HE445 99.99928 99.99930 99.99931 99.99936 99.99937 99.99939 99.99940 99.99941 99.99942 ## h334 h335 h336 h337 h338 h339 h340 h341 h342 ## 11AI225 99.99928 99.99931 99.99932 99.99933 99.99935 99.99938 99.99942 99.99942 99.99943 ## 11HE445 99.99943 99.99944 99.99945 99.99945 99.99945 99.99947 99.99948 99.99949 99.99950 ## h343 h344 h345 h346 h347 h348 h349 h350 h351 ## 11AI225 99.99944 99.99946 99.99947 99.99948 99.99948 99.99949 99.99951 99.99951 99.99952 ## 11HE445 99.99951 99.99952 99.99954 99.99955 99.99956 99.99956 99.99958 99.99959 99.99959 ## h352 h353 h354 h355 h356 h357 h358 h359 h360 ## 11AI225 99.99953 99.99955 99.99957 99.99958 99.99958 99.99958 99.99960 99.99961 99.99961 ## 11HE445 99.99959 99.99961 99.99962 99.99962 99.99963 99.99964 99.99965 99.99967 99.99967 ## h361 h362 h363 h364 h365 h366 h367 h368 h369 ## 11AI225 99.99963 99.99963 99.99963 99.99964 99.99964 99.99967 99.99969 99.99969 99.99971 ## 11HE445 99.99967 99.99968 99.99969 99.99970 99.99971 99.99974 99.99974 99.99976 99.99977 ## h370 h371 h372 h373 h374 h375 h376 h377 h378 ## 11AI225 99.99972 99.99973 99.99975 99.99975 99.99975 99.99976 99.99976 99.99977 99.99977 ## 11HE445 99.99980 99.99982 99.99982 99.99982 99.99983 99.99983 99.99983 99.99984 99.99984 ## h379 h380 h381 h382 h383 h384 h385 h386 h387 ## 11AI225 99.99980 99.99981 99.99982 99.99983 99.99984 99.99985 99.99986 99.99986 99.99988 ## 11HE445 99.99984 99.99985 99.99986 99.99987 99.99987 99.99989 99.99990 99.99990 99.99991 ## h388 h389 h390 h391 h392 h393 h394 h395 h396 ## 11AI225 99.99989 99.99991 99.99992 99.99993 99.99994 99.99994 99.99996 99.99996 99.99997 ## 11HE445 99.99991 99.99992 99.99992 99.99994 99.99995 99.99995 99.99995 99.99996 99.99996 ## h397 h398 h399 h400 ## 11AI225 99.99998 99.99999 100.00000 100 ## 11HE445 99.99997 99.99999 100.00000 100 ## [ reached getOption(&quot;max.print&quot;) -- omitted 43 rows ] ## ## $minh ## 90% 95% 99% 99.9% ## 4 6 10 28 calibrate_reconstructions_efourier(norm.outlines, range = 1:10) #10 harmonics efa.outlines &lt;- efourier(norm.outlines, nb.h = 10, norm = TRUE) pca.outlines &lt;- PCA(efa.outlines) 1.5 PCA # pca scree_plot(pca.outlines) # plot pca par(mfrow = c(2,2)) plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~heart.out, palette = pal_qual_Dark2) plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~heart.reg, palette = pal_qual_Dark2) plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~bev, palette = pal_qual_Dark2) plot_PCA(pca.outlines, morphospace_position = &quot;range&quot;, ~bev.type, palette = pal_qual_Dark2) # contribution of each pc boxplot(pca.outlines, ~heart.out, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~heart.reg, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~bev, nax = 1:5, palette = pal_qual_Dark2) boxplot(pca.outlines, ~bev.type, nax = 1:5, palette = pal_qual_Dark2) # mean shape + 2sd for each pc PCcontrib(pca.outlines, nax = 1:10) 1.6 MANOVA + MANOVA_PW # manova + manova_pw MANOVA(pca.outlines, &#39;heart.out&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 1 2.2646 6.7937 11 33 8.214e-06 *** ## Residuals 43 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 MANOVA(pca.outlines, &#39;heart.reg&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 2 3.2261 4.5458 22 62 1.299e-06 *** ## Residuals 42 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 MANOVA_PW(pca.outlines, &#39;heart.reg&#39;) ## &#39;P&#39; has 10 rows, and &#39;retain&#39; is set accordingly ## PC axes 1 to 10 were retained ## HI ## HP ## IP ## $stars.tab ## H I P ## H *** * ## I - ## ## $summary (see also $manovas) ## Df Pillai approx F num Df den Df Pr(&gt;F) ## H - I 1 0.8218 11.067 10 24 9.112e-07 ## H - P 1 0.6242 3.155 10 19 1.500e-02 ## I - P 1 0.5994 2.095 10 14 1.000e-01 MANOVA(pca.outlines, &#39;bev&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 1 1.4062 4.2188 11 33 0.0006276 *** ## Residuals 43 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 MANOVA(pca.outlines, &#39;bev.type&#39;) ## PC axes 1 to 11 were retained ## Df Hotelling-Lawley approx F num Df den Df Pr(&gt;F) ## fac 2 2.8864 4.0672 22 62 6.899e-06 *** ## Residuals 42 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 MANOVA_PW(pca.outlines, &#39;bev.type&#39;) ## &#39;unifacial.bimarginal&#39; has 3 rows, and &#39;retain&#39; is set accordingly ## PC axes 1 to 3 were retained ## alternateno.bevel ## alternateunifacial.bimarginal ## no.bevelunifacial.bimarginal ## $stars.tab ## alternate no.bevel unifacial.bimarginal ## alternate ** - ## no.bevel - ## ## $summary (see also $manovas) ## Df Pillai approx F num Df den Df Pr(&gt;F) ## alternate - no.bevel 1 0.31187 5.74067 3 38 0.002428 ## alternate - unifacial.bimarginal 1 0.15609 1.41799 3 23 0.263049 ## no.bevel - unifacial.bimarginal 1 0.01724 0.09942 3 17 0.959246 1.7 Mean shapes # mean shapes ms.heart &lt;- MSHAPES(efa.outlines, &#39;heart.out&#39;) ms.heart$Coe ## An OutCoe object [ elliptical Fourier analysis ] ## -------------------- ## - $coe: 2 outlines described, 10 harmonics ## # A tibble: 2 x 5 ## spec heart.out heart.reg bev bev.type ## &lt;chr&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 11AI225 H H y unifacial.bimarginal ## 2 11HE445 N P n no.bevel msh &lt;- ms.heart$shp coo_plot(msh$H, border = &#39;forestgreen&#39;) coo_draw(msh$N, border = &#39;firebrick4&#39;) Figure 1.1: Mean shapes for in (green) and out (maroon) of the heartland. # mean shapes ms.hreg &lt;- MSHAPES(efa.outlines, &#39;heart.reg&#39;, FUN = mean) ms.hreg$Coe ## An OutCoe object [ elliptical Fourier analysis ] ## -------------------- ## - $coe: 3 outlines described, 10 harmonics ## # A tibble: 3 x 5 ## spec heart.out heart.reg bev bev.type ## &lt;chr&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 11AI225 H H y unifacial.bimarginal ## 2 HK49_1462 N I n no.bevel ## 3 11HE445 N P n no.bevel mshr &lt;- ms.hreg$shp coo_plot(mshr$H, border = &#39;forestgreen&#39;) coo_draw(mshr$I) coo_draw(mshr$P, border = &#39;firebrick4&#39;) Figure 1.2: Mean shapes for heartland (green), interior (black), and northern periphery (maroon). # mean shapes ms.bev &lt;- MSHAPES(efa.outlines, &#39;bev&#39;, FUN = mean) ms.bev$Coe ## An OutCoe object [ elliptical Fourier analysis ] ## -------------------- ## - $coe: 2 outlines described, 10 harmonics ## # A tibble: 2 x 5 ## spec heart.out heart.reg bev bev.type ## &lt;chr&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 11HE445 N P n no.bevel ## 2 11AI225 H H y unifacial.bimarginal msb &lt;- ms.bev$shp coo_plot(msb$y, border = &#39;forestgreen&#39;) coo_draw(msb$n, border = &#39;firebrick4&#39;) Figure 1.3: Mean shapes for alternate (green), and not beveled (maroon). # mean shapes ms.bevt &lt;- MSHAPES(efa.outlines, &#39;bev.type&#39;, FUN = mean) ms.bevt$Coe ## An OutCoe object [ elliptical Fourier analysis ] ## -------------------- ## - $coe: 3 outlines described, 10 harmonics ## # A tibble: 3 x 5 ## spec heart.out heart.reg bev bev.type ## &lt;chr&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; &lt;fct&gt; ## 1 HK49_5928 N I y alternate ## 2 11HE445 N P n no.bevel ## 3 11AI225 H H y unifacial.bimarginal msbt &lt;- ms.bevt$shp coo_plot(msbt$alternate, border = &#39;forestgreen&#39;) coo_draw(msbt$unifacial.bimarginal) coo_draw(msbt$no.bevel, border = &#39;firebrick4&#39;) Figure 1.4: Mean shapes by bevel type: alternate (green), unifacial bimarginal (black), and not beveled (maroon). "],
["landmarking-protocol-3d3-hypothesis-viz.html", "Chapter 2 Landmarking Protocol 3d3 + Hypothesis Viz 2.1 Generating the peripheral (plan view) spline 2.2 Splitting the spline 2.3 Spline split at location of LM 01 2.4 Spline split at locations of LM 02 and LM 03 2.5 Spline split at locations of LM 04 and LM 05 2.6 Spline split at location of LM 06 2.7 Peripheral (plan view) spline 2.8 Reference vectors and ref.pt.0 2.9 Reference planes and points 2.10 Sectioning the mesh 2.11 Splitting the sections 2.12 LM3d3: Configuration 1 2.13 References", " Chapter 2 Landmarking Protocol 3d3 + Hypothesis Viz Landmarking protocol 3d3 (LM3d3) represents a substantive advancement from LM3d1 (Selden Jr., Dockall, and Dubied 2020) and was modified from the LM3d2 protocol developed for the analysis of Gahagan bifaces. The principal difference between LM3d2 and LM3d3 is that the projectiles analysed using LM3d2 are lanceolate bifaces, and that landmarking protocol was not designed to capture the variation in basal morphology exhibited by stemmed (Dalton) projectile points. Like LM3d1 and LM3d2, LM3d3 uses the topology of the 3D mesh that articulates with the prehistoric design of each projectile point to construct a suite of reference geometry used to apply semilandmarks in a replicable manner. The result is a landmarking protocol that provides for the improved characterisation of whole-object morphology, which can be subset to analyse variability associated with specific plan, profile, and cross-section components. It also provides those data points needed to investigate questions of directional asymmetry, differences in front/back morphology, morphological integration between blade and basal morphology, and the morphology of broken, fractured, or otherwise incomplete specimens that permeate the archaeological record. knitr::include_graphics(&#39;images/landmarks.png&#39;) (#fig:lm3d3.landmark)Figure 1. Coordinates of landmarks populated using the LM3d1 protocol serve as the basis for LM3d3. Like its’ predecessors, LM3d3 was initially designed using the digit3DLand package in R. When the draft protocol was completed, design of the landmarking protocol shifted to Geomagic Design X (Build Version 2020.0.2 [Build Number: 55]), where the workflow was modified to include those elements of reference geometry that articulate with the prehistoric design attributes of each projectile point. The goal of this effort was to increase both the precision and rigour of the study by including the Z-dimension to capture those shape characteristics associated with axial twisting, introduced by knappers through the practice of beveling (LM3d1) (Selden Jr., Dockall, and Dubied 2020). The addition of cross-sections was needed to better characterise whole-object morphology, providing for the possibility of subsampling the semilandmarks to explore the contribution of specific cross-sections or profiles (LM3d2). LM3d3 includes an additional cross section at the blade/base transition, allowing for tests of morphological integration. While true that some landmarking protocols can be—–and often are—–recycled as new specimens are added, this particular research programme endeavours to achieve ever-greater accuracy and precision in each analytical iteration. 2.1 Generating the peripheral (plan view) spline This effort begins with a spline extracted from the surface geometry of the mesh using the extract contour curves command. In reverse-engineering, extract contour curves is regularly employed as the first step in building a patch network used to create a surface. The extracted feature curve is rendered as a spline, and follows the highest curvature contours around the periphery of the lateral and basal edges, following the highly variable sinuous edge morphology around the entirety of the projectile. The remainder of the landmarking protocol is based upon this spline, which was subsequently split at six mathematically-defined locations. knitr::include_graphics(&#39;images/extractspline.png&#39;) (#fig:lm3d3.figspline)Figure 2. Spline extracted along the highest contours of the Dalton point. 2.2 Splitting the spline Reference geometries are used in the assistance of creating other features. These include basic geometric entities, such as planes, vectors, coordinates, points, and polygons. A reference point is a virtual point and is used to mark a specific position on a model or in 3D space. A reference plane is a virtual plane that has a normal direction and an infinite size. A reference plane is not a surface body, and is used to create other features. The characteristic points and tangents developed for this landmarking protocol were inspired by the work of Birkhoff (1933), which has been gainfully employed within the context of both ceramic (Selden Jr. 2018a, 2018b, 2019, 2021) and lithic analyses (Selden Jr., Dockall, and Shafer 2018; Selden Jr., Dockall, and Dubied 2020). The first landmark (LM1) is placed at the horizontal tangent on the tip of each Dalton point. The second through fifth splits (LMs 02 - 05) occur at points of highest curvature, where LM 02 is always placed on the right side of the projectile following the application of the reference vectors. To place the final landmark (LM 06), a linear measurement was used to project a reference point equidistant between LM 02 and LM 03. The location of that point was leveraged in placing the reference plane used to cut the spline at the location of LM 06. 2.3 Spline split at location of LM 01 The horizontal tangent is calculated by drawing a horizontal line above the tip of the biface using the tangent as a common constraint, and the horizontal as the independent constraint. To split the 3D spline at the location of the horizontal tangent, a reference point was inserted at the location of the tangent in the sketch (light blue point; below, left), followed by a reference plane (in white; below, left and right) using the pick point and normal axis function where the reference point (h-tangent) was used as the pick point, and the Right plane as the normal axis (below, left). The spline was then cut at the location where the reference plane intersected with the spline (below image, right). knitr::include_graphics(&#39;images/lm1.png&#39;) (#fig:lm3d3.figlm1)Figure 3. Identify horizontal tangent, insert reference point and reference plane (left). Use reference plane to cut spline at the location of the horizontal tangent (right). 2.4 Spline split at locations of LM 02 and LM 03 The point of highest curvature on either side of the basal edge was calculated using the curvature function in the Accuracy Analyser. This function displays the curvature flow as a continuous colour plot across the area of the curve. In this instance, curvature is defined as the amount by which a geometric shape deviates from being flat or straight in the case of a line. Curvature is displayed in different colours according to the local radius, and calculated in only one direction (U or V) along the curve. Using this tool, the two points of highest curvature were located between the basal and lateral edges on either side of each projectile where the local radius measure was largest. The orientation of each biface was dictated by the auto3dgm output in LM3d1 and LM3d2; however, LM3d3 enlists a novel method to determine which side of the projectile is associated with LM 02 and LM03 using reference vectors. knitr::include_graphics(&#39;images/splinesplit1.png&#39;) (#fig:lm3d3.figcurve)Figure 4. Identify points of hightest curvature (light blue) at left/right intersection of lateral and basal edges. 2.5 Spline split at locations of LM 04 and LM 05 The point of highest curvature at the intersection of the blade and base was also calculated using the curvature function in the Accuracy Analyser. Using this tool, the two points of highest curvature were located between the blade and base on either side of each projectile where the local radius measure was largest. The orientation of each projectile was dictated by reference vectors, and the landmarking protocol follows the mesh orientation in that figure, where LM 04 was always placed on the right side of the basal edge, and LM 05 on the left. knitr::include_graphics(&#39;images/splinesplit2.png&#39;) (#fig:lm3d3.figcurve2)Figure 5. Identify points of hightest curvature (light blue) at left/right intersection of blade and base. 2.6 Spline split at location of LM 06 One additional landmark (LM 06) was placed at the centre of the base. The location of this landmark was identified by calculating the linear distance between LM 02 and LM 03, and projecting a reference point (ctrl-div; below) equidistant between the two. A reference plane was added using the ctrl-div as the pick point, and the Right plane as the normal axis. The spline was then split at the intersection of the reference plane and the basal spline. knitr::include_graphics(&#39;images/lm6.png&#39;) (#fig:lm3d3.figlm4)Figure 6. Calculate linear distance between LM 02 and LM 03, insert reference plane coplanar to Right plane equidistant between LM 02 and LM 03, and use the reference plane to cut the spline. 2.7 Peripheral (plan view) spline Through the preceding protocol, the initial spline was split into six discrete splines. These splines articulate with components of projectile morphology that can be compartmentalised in the analyses. The primary analytical gain achieved through this exercise is the requisite foundation needed to carry out replicable analyses of Dalton point morphology in three dimensions, further increasing the precision of the geometric morphometric analysis. knitr::include_graphics(&#39;images/splinesplit-frbl.png&#39;) (#fig:lm3d3.figsplinesplit-frbl)Figure 7. Result of spline splits include six discrete splines, each articulating with a region of analytical interest. The coordinates of each spline split are known, and used to place the landmarks. 2.8 Reference vectors and ref.pt.0 The fundamental components of reference geometry used to create LM3d3 consist of three reference vectors, and a single reference point (ref.pt.0), placed equidistant between LM 04 and LM 05. The three reference vectors were placed between LM 01 and ref.pt.0 (Vector 1), ref.pt.0 and LM 06 (Vector 2), and LMs 04 and 05 (Vector 3). These three reference vectors serve as the foundation for the suite of reference geometry used to place the semilandmarks. knitr::include_graphics(&#39;images/lm3d3.vectors.png&#39;) (#fig:lm3d3.vectors)Figure 8. Reference vectors placed between LMs 01 and ref.pt.0 (left), ref.pt.0 and LM 06 (center), and between LMs 04 and 05 (right). The measure of the angle between Vector 1 (blade) and Vector 2 (base) may have additional utility in lithic studies as an orthogonal metric associated with knapper skill, where greater skill is represented by an arbitrary range of angles nearest—and lesser, furthest away from—180 degrees. A second similar measure could be collected between Vectors 1 and 2 in comparison with Vector 3. Collection of these metrics from a 3D mesh in computer aided design (CAD) software adds an increased element of precision in comparison with a goniometer, and serves as an example of the added analytical value that can be extracted from this novel landmarking protocol. Prior to the addition of the reference vectors, the location of LMs 02 through 05 are considered arbitrary. Previous iterations of this landmarking protocol have relied upon auto3dgm to provide principal alignments that dictate which LMs are placed on the left/right side of the biface or projectile. In this protocol, the side of the projectile with the lowest orthogonal measure between Vector 1 and Vector 2 will be on the left, meaning that from the investigator’s view, the projectiles will curve, bend, or lean slightly—or in some cases more dramatically—to the left from base to tip. 2.9 Reference planes and points Five reference planes provide the framework needed to populate the semilandmarks. Admittedly, the logic associated with placement may seem curious at this point; however, the utility of these reference planes will become clear in subsequent sections. 2.9.1 Placement of ref.pl.1 The first reference plane (ref.pl.1) was placed between LM 01 and ref.pt.0, bisecting the blade of the projectile along the mid-line. The method of placement enlists a reference point (ref.pt.1), inserted at the intersection of the three reference vectors. It has the same x,y position as ref.pt.0, but the coordinates of ref.pt.1 were altered to relocate it 15 mm from the vector in the direction of the Z-axis. The pick point and coplanar function was used to place ref.pl.1 coplanar to the first reference vector, and in the direction of ref.pt.1. knitr::include_graphics(&#39;images/lm3d3.ref.pl.1.png&#39;) (#fig:lm3d3.ref.pl.1)Figure 9. Placement of ref.pl.1, and temporary location of ref.pt.1 15mm from Vector 1, and equidistant between LM 01 and ref.pt.0 on the blade of the projectile. 2.9.2 Placement of ref.pl.2 The second reference plane (ref.pl.2) was placed between ref.pt.0 and LM 06, bisecting the base of the projectile along the mid-line. The method of placement for ref.pl.2 follows the same protocol described in the application of ref.pl.1, and enlists the same reference point (ref.pt.1). knitr::include_graphics(&#39;images/lm3d3.ref.pl.2.png&#39;) (#fig:lm3d3.ref.pl.2)Figure 10. Placement of ref.pl.2, and temporary location of ref.pt.2 15 mm from Vector 2, and equidistant between ref.pt.0 and LM 06 on the base of the projectile. 2.9.3 Placement of ref.pl.3 The third reference plane (ref.pl.3) was placed between LMs 04 and 05, and bisects the projectile at the blade/base intersection. The method of placement for ref.pl.3 follows the same protocol described in the application of ref.pl.1, and enlists the same reference point (ref.pt.1), which was deleted following the placement of ref.pl.3. knitr::include_graphics(&#39;images/lm3d3.ref.pl.3.png&#39;) (#fig:lm3d3.ref.pl.3)Figure 11. Placement of ref.pl.3, and temporary location of ref.pt.3 15 mm from Vector 3, and equidistant between LMs 04 and 05 at the intersection of the blade and base. 2.9.4 Placement of ref.pl.4 and ref.pl.5 The fourth (ref.pl.4) and fifth (ref.pl.5) reference planes were placed using the pick point and normal function at the intersections of the first reference vector and LMs 01 and 06. knitr::include_graphics(&#39;images/lm3d3.ref.pl.4-5.png&#39;) (#fig:lm3d3.ref.pl.4-5)Figure 12. Placement of ref.pl.4 (top) and ref.pl.5 (bottom). 2.10 Sectioning the mesh The reference geometry described above was enlisted in the following three-step method developed to produce one cross-section at the blade/base intersection, four cross-sections between the blade/base intersection and LM 01, and one cross-section between the blade/base intersection and LM 06. 2.10.1 Sectioning the blade/base intersection To section the blade/base intersection, a single section was inserted using ref.pl.2, resulting in a single cross-section that bisects the projectile between LMs 04 and 05. knitr::include_graphics(&#39;images/lm3d3.section1.png&#39;) (#fig:lm3d3.section1)Figure 13. Placement of the first section, bisecting the mesh along ref.pl.2. 2.10.2 Sectioning the blade and base Six equidistant sections were placed between LM 01 and ref.pt.0, and the two sections at the locations of LM 01 and ref.pt.0 were deleted. Three equidistant sections were placed between LM 06 and ref.pt.0. The sections intersecting with ref.pt.0 and LM 06 were deleted. Subsequent to placing the sections, ref.pt.0 was itself deleted. knitr::include_graphics(&#39;images/lm3d3.all.sections.png&#39;) (#fig:lm3d3.section3)Figure 14. Placement of the two equidistant sections between LM 06 and ref.pt.3. 2.11 Splitting the sections The curvature function was employed to split each curves at the locations of highest curvature along the lateral edge. This function was detailed above, and in the application of LMs 02, 03, 04, and 05 in LM3d1. A reference plane (ref.pl.1) was then used to cut each of the four curves along the mid-line of the blade where it intersects with the curves. A second reference plane (ref.pl.2) was used to cut the single basal curve and the curve between LMs 04 and 05. Since ref.pt.0 was used to generate ref.pl.1 and ref.pl.2, either of the reference planes could be used to cut the curve between LMs 04 and 05. knitr::include_graphics(&#39;images/lm3d3.split.sections.png&#39;) (#fig:lm3d3.split)Figure 15. Each section was split at the points of highest curvature along the lateral edges, then along the mid-line at the intersection of the curve and ref.pl.1 (for the blade), and ref.pl.2 (for the base). 2.12 LM3d3: Configuration 1 LM3d3: Configuration 1 (LM3d3.c1) was used to assess the three hypotheses included in this pilot study. Semilandmarks 07 - 18 were applied around the lateral edges, and sLMs 12 and 13 between LMs 02, 06, and 03 using the curve constructed in LM3d1. Semilandmarks 19 - 30 articulate with the mid-line between LMs 01 and 06, and sLMs 31 - 34 were placed along the curve that articulates with ref.pl.3 equidistant between the lateral edge and midline. . The result is a landmark configuration that can be subset in numerous ways (plan, profile, cross-section, front/back, left/right, blade/base, etc.), using a suite of design-based attributes to achieve maximum utility for analysts of lithic morphology. knitr::include_graphics(&#39;images/lm3d3.semi.png&#39;) (#fig:lm3d3.semi)Figure 16. Landmarks (blue), semilandmarks (white), curves (orange), and splits (blue) used for LM3d3. Based upon knowledge garnered from running LaSEC (Watanabe 2018) on LM3d1, this landmarking protocol would likely be oversampled if it included additional landmarks on the cross-sections; however, it can be adapted to include as many or as few landmarks and semilandmarks needed to address the research question. knitr::include_graphics(&#39;images/lm3d3.slm.png&#39;) (#fig:lm3d3.slm)Figure 17. Landmarks (blue), semilandmarks (white), and reference geometry used in LM3d3. 2.13 References References "],
["analysis-of-dalton-point-morphology.html", "Chapter 3 Analysis of Dalton point morphology 3.1 Load packages + data 3.2 Generalized Procrustes Analysis 3.3 Boxplots by centroid size 3.4 Principal Components Analysis 3.5 Define models 3.6 Test Hypothesis 1 (Geo) 3.7 Test Hypothesis 2 (Geo) 3.8 Test Hypothesis 3 (Techno) 3.9 Test Hypothesis 4 (Techno)", " Chapter 3 Analysis of Dalton point morphology 3.1 Load packages + data # load packages # devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) library(geomorph) library(tidyverse) library(wesanderson) # setwd setwd(getwd()) # read GM data source(&#39;readmulti.csv.R&#39;) # read .csv files setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]],rownames(qdata)),] # print qdata knitr::kable(qdata, align = &quot;cccc&quot;, caption = &quot;Attributes included in qdata.&quot;) (#tab:load.data)Attributes included in qdata. heart.out heart.reg bev bev.type 11AI225 H H y unifacial.bimarginal 11HE445 N P n no.bevel HK49_1462 N I n no.bevel HK49_2 N I n no.bevel HK49_3022 N I n no.bevel HK49_3823 N I n no.bevel HK49_4 N I n no.bevel HK49_5928 N I y alternate HK49_5961 N I n no.bevel HK49_7 N I y unifacial.bimarginal KeilMangold10 H H y alternate KeilMangold13 H H y alternate KeilMangold14 H H y alternate KeilMangold17 H H y alternate KeilMangold24 H H y alternate KeilMangold3 H H y alternate KeilMangold8 H H y alternate Kinzer46 N P n no.bevel Kinzer49 N P n no.bevel Welton5 N P y unifacial.bimarginal 3.2 Generalized Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalized Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.2 (R Core Development Team, 2020) using the geomorph library v. 3.3.1 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # output + consensus configuration coords Y.gpa ## ## Call: ## gpagen(A = coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) ## ## ## ## Generalized Procrustes Analysis ## with Partial Procrustes Superimposition ## ## 34 fixed landmarks ## 0 semilandmarks (sliders) ## 3-dimensional landmarks ## 2 GPA iterations to converge ## ## ## Consensus (mean) Configuration ## ## X Y Z ## 1 -0.326964110 -5.496484e-04 -1.435783e-03 ## 2 0.214322797 1.174470e-01 -4.414246e-05 ## 3 0.209847898 -1.236033e-01 1.433593e-03 ## 4 0.086495589 1.223069e-01 -1.610342e-03 ## 5 0.080190193 -1.197655e-01 8.468350e-05 ## 6 0.194733234 -2.508820e-03 4.994972e-04 ## 7 -0.245055642 4.838382e-02 1.859972e-03 ## 8 -0.162994676 7.387978e-02 4.225334e-04 ## 9 -0.080868565 8.704805e-02 8.822250e-04 ## 10 0.001279164 1.002547e-01 1.596956e-04 ## 11 0.143348583 1.144603e-01 -2.023955e-03 ## 12 0.214725840 5.916507e-02 -1.063111e-03 ## 13 0.214119277 -6.574629e-02 5.761651e-04 ## 14 0.135166306 -1.157978e-01 3.080523e-04 ## 15 0.002288848 -9.670093e-02 -1.905958e-03 ## 16 -0.079992149 -8.518027e-02 -1.388106e-03 ## 17 -0.162292562 -7.225936e-02 -2.051871e-03 ## 18 -0.244609649 -5.026964e-02 -1.854068e-03 ## 19 -0.244837453 -2.217482e-04 2.111707e-02 ## 20 -0.162643425 2.484701e-04 2.833843e-02 ## 21 -0.080461721 6.062743e-04 3.095970e-02 ## 22 0.001775062 1.067340e-03 2.968620e-02 ## 23 0.083323050 1.417364e-03 2.618646e-02 ## 24 0.138901130 -5.186483e-04 1.899507e-02 ## 25 0.139362553 -6.654529e-04 -1.922060e-02 ## 26 0.083347109 1.202092e-03 -2.586223e-02 ## 27 0.001895695 8.261458e-04 -2.871394e-02 ## 28 -0.080326354 4.602540e-04 -2.874281e-02 ## 29 -0.162564672 3.730724e-05 -2.587689e-02 ## 30 -0.244777259 -2.930378e-04 -2.055985e-02 ## 31 0.084986247 6.518465e-02 2.279628e-02 ## 32 0.081631227 -6.210678e-02 2.368055e-02 ## 33 0.081681902 -6.231709e-02 -2.285489e-02 ## 34 0.084966533 6.450885e-02 -2.277763e-02 # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, heart = qdata$heart.out, hreg = qdata$heart.reg) # plot consensus configuration par(mfrow=c(1, 3)) plot(Y.gpa$consensus[,c(&quot;Y&quot;, &quot;X&quot;)], pch=20) plot(Y.gpa$consensus[,c(&quot;Z&quot;, &quot;X&quot;)], pch=20) plot(Y.gpa$consensus[,c(&quot;Z&quot;, &quot;Y&quot;)], pch=20) Figure 3.1: 2D plot of 3D consensus configuration. # render 3d gpa plot #plot(Y.gpa) # gpa plot # knitr::include_graphics(&#39;images/gpa3d.png&#39;) 3.3 Boxplots by centroid size # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;ccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) (#tab:box.attr)Modified attributes included in qdata. heart.out heart.reg bev bev.type csz 11AI225 H H y unifacial.bimarginal 111.17971 11HE445 N P n no.bevel 125.68376 HK49_1462 N I n no.bevel 106.02942 HK49_2 N I n no.bevel 77.88910 HK49_3022 N I n no.bevel 100.02205 HK49_3823 N I n no.bevel 112.93309 HK49_4 N I n no.bevel 118.11018 HK49_5928 N I y alternate 121.33863 HK49_5961 N I n no.bevel 102.86813 HK49_7 N I y unifacial.bimarginal 104.40945 KeilMangold10 H H y alternate 126.59440 KeilMangold13 H H y alternate 143.47265 KeilMangold14 H H y alternate 147.46915 KeilMangold17 H H y alternate 105.16645 KeilMangold24 H H y alternate 111.45604 KeilMangold3 H H y alternate 126.88410 KeilMangold8 H H y alternate 104.38197 Kinzer46 N P n no.bevel 92.72096 Kinzer49 N P n no.bevel 86.46909 Welton5 N P y unifacial.bimarginal 188.68723 # attributes for boxplots csz &lt;- qdata$csz # centroid size heart &lt;- qdata$heart.out # heartland in/out hreg &lt;- qdata$heart.reg # heartland region bev.1 &lt;- qdata$bev # beveled yes/no bev.2 &lt;- qdata$bev.type # type of beveling # boxplot of Dalton point centroid size by in/out heartland csz.hrt &lt;- ggplot(qdata, aes(x = heart, y = csz, color = heart)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;In Heartland?&#39;, y = &#39;Centroid Size&#39;) # render plot csz.hrt ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.2: Boxplot of centroid size by Heartland (in/out). # boxplot of Dalton point centroid size by heartland + regions csz.hreg &lt;- ggplot(qdata, aes(x = hreg, y = csz, color = hreg)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Heartland Region&#39;, y = &#39;Centroid Size&#39;) # render plot csz.hreg ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.3: Boxplot of centroid size by Heartland region. # boxplot of Dalton point centroid size by beveled y/n csz.bev.1 &lt;- ggplot(qdata, aes(x = bev.1, y = csz, color = bev.1)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Beveled?&#39;, y = &#39;Centroid Size&#39;) # render plot csz.bev.1 ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.4: Boxplot of centroid size by beveled. # boxplot of Dalton point centroid size by bevel type csz.bev.2 &lt;- ggplot(qdata, aes(x = bev.2, y = csz, color = bev.2)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Bevel Type&#39;, y = &#39;Centroid Size&#39;) # render plot csz.bev.2 ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. Figure 3.5: Boxplot of centroid size by bevel type. 3.4 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bifaces. The shape changes described by each principal axis are commonly visualized using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering and projection: OLS ## Number of observations 20 ## Number of vectors 20 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 Comp7 ## Eigenvalues 0.01088902 0.001751307 0.001332042 0.0004539976 0.0003415665 0.000231028 0.0001813442 ## Proportion of Variance 0.68827450 0.110696846 0.084195899 0.0286963445 0.0215897827 0.014602849 0.0114624283 ## Cumulative Proportion 0.68827450 0.798971345 0.883167244 0.9118635888 0.9334533715 0.948056220 0.9595186487 ## Comp8 Comp9 Comp10 Comp11 Comp12 Comp13 ## Eigenvalues 0.0001434858 9.800377e-05 8.350814e-05 7.258745e-05 0.0000532005 0.0000399704 ## Proportion of Variance 0.0090694738 6.194636e-03 5.278395e-03 4.588118e-03 0.0033627052 0.0025264550 ## Cumulative Proportion 0.9685881224 9.747828e-01 9.800612e-01 9.846493e-01 0.9880119765 0.9905384315 ## Comp14 Comp15 Comp16 Comp17 Comp18 Comp19 ## Eigenvalues 3.899308e-05 3.717557e-05 2.418819e-05 2.011341e-05 1.812459e-05 1.109423e-05 ## Proportion of Variance 2.464680e-03 2.349799e-03 1.528891e-03 1.271331e-03 1.145622e-03 7.012458e-04 ## Cumulative Proportion 9.930031e-01 9.953529e-01 9.968818e-01 9.981531e-01 9.992988e-01 1.000000e+00 ## Comp20 ## Eigenvalues 1.396792e-33 ## Proportion of Variance 8.828863e-32 ## Cumulative Proportion 1.000000e+00 # set plot parameters to plot by heartland in (H) and out (N) pch.gps.heart &lt;- c(15,17)[as.factor(heart)] col.gps.heart &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(heart)] col.hull &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by heartland in (H) and out (N) pc.plot1 &lt;- plot(pca, asp = 1, pch = pch.gps.heart, col = col.gps.heart) shapeHulls(pc.plot1, groups = heart, group.cols = col.hull) # set plot parameters to plot by heartland + regions pch.gps.hreg &lt;- c(15,17,18)[as.factor(hreg)] col.gps.hreg &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(hreg)] col.hull.2 &lt;- c(&quot;#798E87&quot;,&quot;#CCC591&quot;,&quot;#C27D38&quot;) # plot pca by heartland + regions pc.plot2 &lt;- plot(pca, asp = 1, pch = pch.gps.hreg, col = col.gps.hreg) shapeHulls(pc.plot2, groups = hreg, group.cols = col.hull.2) # set plot parameters to plot by beveled y and n pch.gps.bev.1 &lt;- c(15,17)[as.factor(bev.1)] col.gps.bev.1 &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(bev.1)] col.hull.3 &lt;- c(&quot;#C27D38&quot;,&quot;#798E87&quot;) # plot pca by heartland in (H) and out (N) pc.plot3 &lt;- plot(pca, asp = 1, pch = pch.gps.bev.1, col = col.gps.bev.1) shapeHulls(pc.plot3, groups = bev.1, group.cols = col.hull.3) # set plot parameters to plot by bevel type pch.gps.bev.2 &lt;- c(15,17,18)[as.factor(bev.2)] col.gps.bev.2 &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(bev.2)] col.hull.4 &lt;- c(&quot;#CCC591&quot;,&quot;#C27D38&quot;,&quot;#798E87&quot;) # plot pca by bevel type pc.plot4 &lt;- plot(pca, asp = 1, pch = pch.gps.bev.2, col = col.gps.bev.2) shapeHulls(pc.plot4, groups = bev.2, group.cols = col.hull.4) 3.5 Define models 3.5.1 Hypothesis 1 ## Define models # size as a function of heart fit.size.heart &lt;- procD.lm(size ~ heart, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of heart fit.shape.heart &lt;- procD.lm(shape ~ heart, data = gdf, print.progress = FALSE, iter = 9999) 3.5.2 Hypothesis 2 ## Define models # size as a function of hreg fit.size.hreg &lt;- procD.lm(size ~ hreg, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of hreg fit.shape.hreg &lt;- procD.lm(shape ~ hreg, data = gdf, print.progress = FALSE, iter = 9999) 3.5.3 Hypothesis 3 ## Define models # size as a function of bev.1 fit.size.bev.1 &lt;- procD.lm(size ~ bev.1, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of bev.1 fit.shape.bev.1 &lt;- procD.lm(shape ~ bev.1, data = gdf, print.progress = FALSE, iter = 9999) 3.5.4 Hypothesis 4 ## Define models # size as a function of bev.2 fit.size.bev.2 &lt;- procD.lm(size ~ bev.2, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of bev.2 fit.shape.bev.2 &lt;- procD.lm(shape ~ bev.2, data = gdf, print.progress = FALSE, iter = 9999) 3.6 Test Hypothesis 1 (Geo) Hypothesis 1 assesses whether there is a difference in morphology for Dalton points found in and out of the heartland. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis1.jpg&#39;) (#fig:lm3d3.a1.h1)Figure 18. Hypothesis 1 considers whether Dalton points discovered in (left) and out (right) of the Heartland differ in morphology. # ANOVA: do dalton projectile point sizes differ by heart? anova(fit.size.heart) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## heart 1 544 543.96 0.04849 0.9173 0.47408 0.3658 ## Residuals 18 10674 592.98 0.95151 ## Total 19 11218 ## ## Call: procD.lm(f1 = size ~ heart, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do dalton projectile point shapes differ by heart? anova(fit.shape.heart) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## heart 1 0.066826 0.066826 0.22231 5.1455 2.3188 0.0137 * ## Residuals 18 0.233769 0.012987 0.77769 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ heart, iter = 9999, data = gdf, print.progress = FALSE) 3.7 Test Hypothesis 2 (Geo) Hypothesis 2 assesses whether there is a difference in morphology for Dalton points found in the heartland, the interior, and the northern periphery. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis2.jpg&#39;) (#fig:lm3d3.a1.h2)Figure 19. Hypothesis 2 considers whether Dalton points discovered in the heartland (left), interior (center), and northern periphery (right) differ in morphology. # ANOVA: does dalton projectile point size differ by hreg? anova(fit.size.hreg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## hreg 2 1402.2 701.12 0.125 1.2143 0.52153 0.324 ## Residuals 17 9815.3 577.37 0.875 ## Total 19 11217.5 ## ## Call: procD.lm(f1 = size ~ hreg, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sz.hreg &lt;- pairwise(fit.size.hreg, groups = qdata$heart.reg) summary(sz.hreg, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 16.625554 22.85776 0.9757888 0.1775 ## H:P 1.314703 28.93975 -1.2356693 0.9327 ## I:P 17.940257 28.78021 0.6640937 0.2421 # pairwise distance between variances = standardization? summary(sz.hreg, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## H I P ## 247.0858 158.2345 1643.1832 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 88.85136 788.5235 -1.562691 0.9314 ## H:P 1396.09736 1135.2677 2.642227 0.0070 ## I:P 1484.94872 1132.3143 2.916284 0.0027 # ANOVA: does dalton projectile point shape differ by hreg? anova(fit.shape.hreg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## hreg 2 0.076358 0.038179 0.25402 2.8945 1.8315 0.0388 * ## Residuals 17 0.224236 0.013190 0.74598 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ hreg, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sh.hreg &lt;- pairwise(fit.shape.hreg, groups = qdata$heart.reg) summary(sz.hreg, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 16.625554 22.85776 0.9757888 0.1775 ## H:P 1.314703 28.93975 -1.2356693 0.9327 ## I:P 17.940257 28.78021 0.6640937 0.2421 # pairwise distance between variances = standardization? summary(sz.hreg, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: H I P ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## H I P ## 247.0858 158.2345 1643.1832 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## H:I 88.85136 788.5235 -1.562691 0.9314 ## H:P 1396.09736 1135.2677 2.642227 0.0070 ## I:P 1484.94872 1132.3143 2.916284 0.0027 3.8 Test Hypothesis 3 (Techno) Hypothesis 3 assesses whether there is a discernible difference in morphology for Dalton points that are beveled. A residual randomization permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes with size (allometry), and differs by group (region), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (Collyer, Sekora, and Adams 2015). knitr::include_graphics(&#39;images/dalton-vizhypothesis3.jpg&#39;) (#fig:lm3d3.a1.h3)Figure 20. Hypothesis 3 considers whether beveled Dalton points (left) differ in morphology from those that are not beveled (right). # ANOVA: do dalton projectile point sizes differ by beveling? anova(fit.size.bev.1) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.1 1 2835.3 2835.32 0.25276 6.0886 1.3572 0.0151 * ## Residuals 18 8382.2 465.68 0.74724 ## Total 19 11217.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = size ~ bev.1, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do dalton projectile point shapes differ by beveling? anova(fit.shape.bev.1) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.1 1 0.087904 0.087904 0.29244 7.4394 2.7633 0.0025 ** ## Residuals 18 0.212690 0.011816 0.70756 ## Total 19 0.300594 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ bev.1, iter = 9999, data = gdf, print.progress = FALSE) 3.9 Test Hypothesis 4 (Techno) # ANOVA: does dalton projectile point size differ by bev.2? anova(fit.size.bev.2) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.2 2 3119.5 1559.77 0.27809 3.2744 1.3051 0.0562 . ## Residuals 17 8098.0 476.35 0.72191 ## Total 19 11217.5 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = size ~ bev.2, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sz.bev.2 &lt;- pairwise(fit.size.bev.2, groups = qdata$bev.type) summary(sz.bev.2, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 20.82034 21.72601 1.681008 0.0632 ## alternate:unifacial.bimarginal 11.41337 32.00230 -0.166745 0.4847 ## no.bevel:unifacial.bimarginal 32.23371 31.58037 2.000539 0.0443 # pairwise distance between variances = standardization? summary(sz.bev.2, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## alternate no.bevel unifacial.bimarginal ## 230.7012 207.4508 1461.7774 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 23.25044 511.8362 -1.826811 0.9771 ## alternate:unifacial.bimarginal 1231.07620 929.4305 3.239259 0.0033 ## no.bevel:unifacial.bimarginal 1254.32664 927.5379 3.378133 0.0015 # ANOVA: does dalton projectile point shape differ by bev.2? anova(fit.shape.bev.2) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## bev.2 2 0.13402 0.067010 0.44585 6.8388 3.1541 6e-04 *** ## Residuals 17 0.16658 0.009799 0.55415 ## Total 19 0.30059 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ bev.2, iter = 9999, data = gdf, print.progress = FALSE) # pairwise comparison of LS means = which differ? sh.bev.2 &lt;- pairwise(fit.shape.bev.2, groups = qdata$bev.type) summary(sz.bev.2, confidence = 0.95, test.type = &quot;dist&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## LS means: ## Vectors hidden (use show.vectors = TRUE to view) ## ## Pairwise distances between means, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 20.82034 21.72601 1.681008 0.0632 ## alternate:unifacial.bimarginal 11.41337 32.00230 -0.166745 0.4847 ## no.bevel:unifacial.bimarginal 32.23371 31.58037 2.000539 0.0443 # pairwise distance between variances = standardization? summary(sz.bev.2, confidence = 0.95, test.type = &quot;var&quot;) ## ## Pairwise comparisons ## ## Groups: alternate no.bevel unifacial.bimarginal ## ## RRPP: 10000 permutations ## ## ## Observed variances by group ## ## alternate no.bevel unifacial.bimarginal ## 230.7012 207.4508 1461.7774 ## ## Pairwise distances between variances, plus statistics ## d UCL (95%) Z Pr &gt; d ## alternate:no.bevel 23.25044 511.8362 -1.826811 0.9771 ## alternate:unifacial.bimarginal 1231.07620 929.4305 3.239259 0.0033 ## no.bevel:unifacial.bimarginal 1254.32664 927.5379 3.378133 0.0015 References "],
["references.html", "References", " References "]
]
